type RequestError = Error & { response: any }
type RequestErrorEvent = (callback: (error: RequestError | string) => void) => void;
type RequestErrorEventWithData<data> = (callback: (error: RequestError | string, data) => void) => void;

export interface Price {
    amount: string;
    currency: string;
}

export interface SuccessResponse {
    status: 200;
    success: true;
    data: {
        message?: string;
        events?: { [event_name: string]: any };
        [key: string]: any;
    };
}

export interface ErrorResponse {
    status: 422 | 404;
    success: false;
    error: {
        message?: string | 'alert.invalid_fields';
        code?: any;
        case?: string | 'resend_counter' | 'invalid_code';
        events?: { [event_name: string]: any };
        fields?: { [field_name: string]: Array<string> };
        [key: string]: any;
    }
}

export interface Currency {
    code: string | 'SAR';
    name: string;
    symbol: string;
    amount?: number;
    country_code?: string;
}