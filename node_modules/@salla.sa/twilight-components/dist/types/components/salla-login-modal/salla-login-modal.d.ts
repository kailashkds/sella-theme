import { CustomField } from './intefaces';
/**
 * @slot footer - The footer of modal
 * @slot before-login-type - placeholder position
 * @slot after-login-type - placeholder position
 * @slot before-login-mobile - placeholder position
 * @slot after-login-mobile - placeholder position
 * @slot before-login-email - placeholder position
 * @slot after-login-email - placeholder position
 * @slot before-registration - placeholder position
 * @slot after-registration - placeholder position
 */
export declare class SallaLoginModal {
  constructor();
  host: HTMLElement;
  /**
   * Does the merchant allow to login using email
   */
  isEmailAllowed: boolean;
  /**
   * Does the merchant/current location for visitor allow to login using mobile, By default outside KSA is `false`
   */
  isMobileAllowed: boolean;
  /**
   * Does the merchant require registration with email & mobile
   */
  isEmailRequired: boolean;
  /**
   * Once the api verify success, it will be login the customer in web pages
   */
  supportWebAuth: boolean;
  private modal;
  private homeTab;
  private mobileTab;
  private emailTab;
  private verifyTab;
  private registrationTab;
  private regTelInput;
  private regEmail;
  private customFieldsWrapper;
  private loginTelInput;
  private loginEmail;
  private firstName;
  private lastName;
  private smsBtn;
  private emailBtn;
  private regBtn;
  currentTabName: string;
  regType: 'phone' | 'email';
  translationLoaded: boolean;
  title: string;
  emailErrorMsg: string;
  firstNameErrorMsg: string;
  lastNameErrorMsg: string;
  dragAndDrop: string;
  browseFromFiles: string;
  customFields: CustomField[];
  private customFieldsValues;
  uploadedImage: string;
  /**
   * @param {CustomEvent|{details:{case:'new_customer'|'authenticated', redirect_url:string|null}}} event
   */
  onVerified(event: any): any;
  updateTranslations(): void;
  /**
   * Open login component
   */
  open(event?: any): Promise<HTMLElement>;
  private showTab;
  private typing;
  private loginBySMS;
  private loginByEmail;
  private login;
  private newUser;
  private newUserValidation;
  private getFilepondPlaceholder;
  validateField(field: HTMLInputElement | HTMLSallaFileUploadElement, errorMsg: string): void;
  generateTabClasses(tabName: any): {
    's-login-modal-tab': boolean;
    "s-hidden": boolean;
    "s-show": boolean;
    's-login-modal-unactive': boolean;
    's-login-modal-active': boolean;
  };
  generateRegClasses(regType: any): {
    "mb-1.5": boolean;
    "s-hidden": boolean;
  };
  render(): any;
}
