{"version":3,"file":"salla-file-upload.js","sourceRoot":"","sources":["../../../src/components/salla-file-upload/salla-file-upload.tsx"],"names":[],"mappings":"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","sourcesContent":["import {Component, Prop, h, Element, Host, Event, EventEmitter, Method} from '@stencil/core';\nimport * as FilePond from 'filepond';\nimport FilePondPluginFileValidateSize from 'filepond-plugin-file-validate-size';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport FilePondPluginImageEdit from 'filepond-plugin-image-edit';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport FilePondPluginFilePoster from 'filepond-plugin-file-poster';\n\nimport {FilePondFile} from './interfaces'\nimport {FilePond as FilePondType, FilePondErrorDescription} from 'filepond/types/index'\n\n\n@Component({\n  tag: 'salla-file-upload',\n  styleUrl: 'salla-file-upload.scss',\n})\nexport class SallaFileUpload {\n  constructor() {\n    FilePond.registerPlugin(\n      FilePondPluginImagePreview,\n      FilePondPluginImageExifOrientation,\n      FilePondPluginFileValidateSize,\n      FilePondPluginImageEdit,\n      FilePondPluginFileValidateType,\n      FilePondPluginFilePoster\n    );\n    //if cartItemIdIsPassed, we need to set the url\n    if (!this.url && this.cartItemId) {\n      this.url = salla.cart.getUploadImageEndpoint();\n      this.instantUpload = true;\n    }\n\n    if (!this.url && this.profileImage) {\n      this.url = salla.url.api('profile/update');\n      this.instantUpload = true;\n      this.host.hasAttribute('name') || (this.name = 'avatar');\n    }\n\n    if (!this.name) {\n      this.name = 'file';\n    }\n\n    salla.lang.onLoaded(() => {\n      this.host.querySelectorAll('.filepond--drop-label>label').forEach(label => label.innerHTML = this.getLabel())\n      if (this.filepond) {\n        this.filepond.labelFileTypeNotAllowed = salla.lang.get('common.uploader.invalid_type');\n        this.filepond.labelMaxFileSizeExceeded = salla.lang.get('common.uploader.too_large');\n        this.filepond.labelFileSizeNotAvailable = salla.lang.get('common.uploader.size_not_available');\n        this.filepond.labelFileLoading = salla.lang.get('common.elements.loading');\n        this.filepond.labelFileLoadError = salla.lang.get('common.uploader.failed_to_load');\n        this.filepond.labelFileProcessing = salla.lang.get('common.uploader.uploading');\n        this.filepond.labelFileProcessingComplete = salla.lang.get('common.uploader.upload_completed');\n        this.filepond.labelFileProcessingAborted = salla.lang.get('common.uploader.upload_cancelled');\n        this.filepond.labelFileProcessingError = salla.lang.get('common.uploader.error_uploading');\n        this.filepond.labelTapToCancel = salla.lang.get(\"common.elements.cancel\");\n        this.filepond.labelTapToRetry = salla.lang.get(\"common.elements.retry\");\n        this.filepond.labelButtonRemoveItem = salla.lang.get(\"common.elements.remove\");\n        this.filepond.labelButtonUndoItemProcessing = salla.lang.get(\"common.elements.undo\");\n        this.filepond.labelButtonProcessItem = salla.lang.get(\"common.uploader.upload\");\n      }\n    });\n  }\n\n  private fileUploader: HTMLInputElement;\n  private hiddenInput: HTMLInputElement;\n  public filepond: FilePondType;\n\n  @Element() host: HTMLElement;\n\n  /**\n   * The uploaded image link or URL\n   */\n  @Prop({reflect: true, mutable: true}) value: string;\n\n  /**\n   * The uploaded files as json `[{url:\"...\", id:123}]` for delete possibility\n   */\n  @Prop({reflect: true}) files: string;\n\n  /**\n   * The original height of the uploader, will be used to reset the height after the image is removed.\n   */\n  @Prop({reflect: true}) height: string;\n\n  /**\n   *  to prepare the upload url automatically pass this prop, ex to upload attach file in cart Item.\n   */\n  @Prop() cartItemId?: string;\n\n  /**\n   * Set the component to be profile image uploader with a preview and a circular shape\n   */\n  @Prop({reflect: true}) profileImage: boolean = false;\n\n  /**\n   * File input name for the native formData\n   */\n  @Prop({mutable: true, reflect: true}) name?: string;\n\n  /**\n   * File input name in the request payload\n   */\n  @Prop() payloadName: string;\n\n  /**\n   * Accepted file types\n   */\n  @Prop({reflect: true, mutable: true}) accept: string = \"image/png, image/jpeg, image/jpg, image/gif\";\n\n  /**\n   * If current file has id, pass it here, to be passed back in the `removed` event\n   */\n  @Prop() fileId?: number;\n\n  /**\n   * The url to submit the image into.\n   */\n  @Prop({mutable: true}) url: string;\n  /**\n   * The submit request method.\n   */\n  @Prop() method: string = 'POST';\n\n  /**\n   * json formData to be injected in the submit request\n   */\n  @Prop() formData: string = \"{}\";\n\n  /**\n   * Sets the required attribute to the output field\n   */\n  @Prop() required: boolean;\n\n  /**\n   * The maximum size of a file, for instance 2MB or 750KB\n   */\n  @Prop() maxFileSize: `${number}MB` | `${number}KB}` = '2MB'\n\n  /**\n   * Sets the disabled attribute to the output field\n   */\n  @Prop() disabled: boolean;\n\n  /**\n   * Enable or disable drag n' drop\n   */\n  @Prop() allowDrop: boolean = true;\n\n  /**\n   * Enable or disable file browser\n   */\n  @Prop() allowBrowse: boolean = true;\n\n  /**\n   * Enable or disable pasting of files. Pasting files is not supported on all browesrs.\n   */\n  @Prop() allowPaste: boolean;\n\n  /**\n   * Enable or disable adding multiple files\n   */\n  @Prop() allowMultiple: boolean;\n\n  /**\n   * Allow drop to replace a file, only works when allowMultiple is false\n   */\n  @Prop() allowReplace: boolean = true;\n\n  /**\n   * Enable or disable the revert processing button\n   */\n  @Prop() allowRevert: boolean = true;\n\n  /**\n   * When set to false the remove button is hidden and disabled\n   */\n  @Prop() allowRemove: boolean = true;\n\n  /**\n   * Enable or disable the process button\n   */\n  @Prop() allowProcess: boolean;\n\n  /**\n   * Allow users to reorder files with drag and drop interaction.\n   * Note that this only works in single column mode.\n   * It also only works on browsers that support pointer events.\n   */\n  @Prop() allowReorder: boolean;\n\n  /**\n   * Tells FilePond to store files in hidden file input elements so they can be posted along with normal form post.\n   * This only works if the browser supports the DataTransfer constructor (https://caniuse.com/mdn-api_datatransfer_datatransfer),\n   * this is the case on Firefox, Chrome, Chromium powered browsers and Safari version 14.1 and higher.\n   */\n  @Prop() storeAsFile: boolean;\n\n  /**\n   * Set to true to require the file to be successfully reverted before continuing.\n   */\n  @Prop() forceRevert: boolean;\n\n  /**\n   * The maximum number of files that the pond can handle\n   */\n  @Prop() maxFilesCount: number = null;\n\n  /**\n   * The maxmimum number of files that can be uploaded in parallel\n   */\n  @Prop() maxParallelUploads: number = 2;\n\n  /**\n   * Set to true to enable custom validity messages.\n   * FilePond will throw an error when a parent form is submitted and it contains invalid files.\n   */\n  @Prop() checkValidity: boolean;\n\n  /**\n   * Set to 'after' to add files to end of list (when dropped at the top of the list or added using browse or paste),\n   * set to 'before' to add files at start of list.\n   * Set to a compare function to automatically sort items when added\n   */\n  @Prop() itemInsertLocation: 'before' | 'after' | ((a: FilePondFile, b: FilePondFile) => number) = 'after';\n\n  /**\n   * The interval to use before showing each item being added to the list\n   */\n  @Prop() itemInsertInterval: number = 75;\n\n  /**\n   * Show credits at the bottom of the upload element.\n   * Structure is like [{label,url}]\n   */\n  @Prop() credits: false;\n\n  /// DRAG and DROP Props\n\n  /**\n   * FilePond will catch all files dropped on the webpage\n   */\n  @Prop() dropOnPage: boolean;\n\n  /**\n   * Require drop on the FilePond element itself to catch the file.\n   */\n  @Prop() dropOnElement: boolean = true;\n\n  /**\n   * When enabled, files are validated before they are dropped. A file is not added when it's invalid.\n   */\n\n  @Prop() dropValidation: boolean;\n\n  /**\n   * Ignored file names when handling dropped directories. Dropping directories is not supported on all browsers.\n   */\n  @Prop() ignoredFiles: Array<any> = ['.ds_store', 'thumbs.db', 'desktop.ini'];\n\n  /**\n   * Immediately upload new files to the server\n   */\n  @Prop({mutable: true}) instantUpload: boolean;\n\n  /**\n   * Enable chunked uploads, when enabled will automatically cut up files in chunkSize chunks before upload.\n   */\n  @Prop() chunkUploads: boolean;\n\n  /**\n   * Force chunks even for files smaller than the set chunkSize\n   */\n  @Prop() chunkForce: boolean;\n\n  /**\n   * The size of a chunk in bytes\n   */\n  @Prop() chunkSize: number = 5000000;\n\n  /**\n   * Amount of times, and delayes, between retried uploading of a chunk\n   */\n  @Prop() chunkRetryDelays: Array<number> = [500, 1000, 3000];\n\n\n  /// Labels Props\n\n  /**\n   * The decimal separator used to render numbers. By default this is determined automatically.\n   */\n  @Prop() labelDecimalSeparator: string = undefined;\n\n  /**\n   * The thousdands separator used to render numbers. By default this is determined automatically.\n   */\n  @Prop() labelThousandsSeparator: string = undefined;\n\n  /**\n   * Default label shown to indicate this is a drop area.\n   * FilePond will automatically bind browse file events to the element with CSS class .filepond--label-action\n   * @default `${salla.lang.get('common.uploader.drag_and_drop')}<span class=\"filepond--label-action\"> ${salla.lang.get('common.uploader.browse')} </span>`\n   */\n  @Prop({mutable: true}) labelIdle: string;\n\n  /// SVG Icons\n\n  /**\n   * The icon used for remove actions\n   */\n  @Prop() iconRemove: string = '<svg>...</svg>';\n\n  /**\n   * The icon used for process actions\n   */\n  @Prop() iconProcess: string = '<svg>...</svg>';\n\n  /**\n   * The icon used for retry actions\n   */\n  @Prop() iconRetry: string = '<svg>...</svg>';\n\n  /**\n   * The icon used for undo actions\n   */\n  @Prop() iconUndo: string = '<svg>...</svg>';\n\n  /// Hooks\n\n  /**\n   * Event emitted when the file has been added\n   */\n  @Event() added: EventEmitter<{ error: FilePondErrorDescription | null, file: FilePondFile }>;\n\n  /**\n   * Event emitted when the input is invalid\n   */\n  @Event() invalidInput: EventEmitter<any>;\n\n  addedHandler(error: FilePondErrorDescription | null, file: FilePondFile) {\n    this.added.emit({error: error, file: file});\n    //if the file passed on initiate will not have type\n    this.host.querySelector('.filepond--root').classList.remove('s-file-upload-has-error');\n    if (error || !file.file.type) {\n      this.host.querySelector('.filepond--root').classList.add('s-file-upload-has-error');\n      return;\n    }\n    let container = new DataTransfer;\n    let fileInput = this.getFormDataFileInput();\n    // @ts-ignore\n    container.items.add(file.file);\n    fileInput.type = 'file';\n    fileInput.files = container.files;\n    fileInput.dispatchEvent(new window.Event('change', {bubbles: true}))\n  }\n\n  /**\n   * Event emitted when the file has been uploaded and link to the file has been recieved from the server. Returns string value.\n   */\n  @Event() uploaded: EventEmitter<string>;\n\n  uploadedHandler() {\n    let fileInput = this.getFormDataFileInput();\n    fileInput.type = 'hidden';\n    fileInput.value = this.value;\n    this.hiddenInput.value = this.value;\n    fileInput.dispatchEvent(new window.Event('change', {bubbles: true}))\n    return this.uploaded.emit(this.value);\n  }\n\n  /**\n   * Event emitted when the file is about to be removed. Returns boolean value.\n   */\n  @Event() removed: EventEmitter<FilePondFile>;\n\n  removedHandler(deletedFile: FilePondFile) {\n    let fileInput = this.getFormDataFileInput();\n    fileInput.type = 'hidden';\n    fileInput.value = '';\n    this.host.closest('.s-product-options-option')?.removeAttribute('data-has-value');\n    if (deletedFile.getMetadata('id')) {\n      salla.cart.api.deleteImage(deletedFile.getMetadata('id'));\n    }\n    if (this.height) {\n      setTimeout(() => (this.host.querySelector('.filepond--root') as HTMLElement).style.height = this.height, 1000);\n    }\n    this.hiddenInput.value = '';\n    fileInput.dispatchEvent(new window.Event('change', {bubbles: true}))\n    return this.removed.emit(deletedFile);\n  }\n\n  /**\n   *  Method to set option for filepond\n   * */\n  @Method()\n  async setOption(key: string, value: string | number) {\n    this.filepond[key] = value;\n  }\n\n  private getLabel() {\n    if (this.labelIdle) {\n      //some times we are passing label before translations is loaded, so here we will make sure that all translations are translated\n      return this.labelIdle\n        .replace('common.uploader.drag_and_drop', salla.lang.get('common.uploader.drag_and_drop'))\n        .replace('common.uploader.browse', salla.lang.get('common.uploader.browse'));\n    }\n    return `${salla.lang.get('common.uploader.drag_and_drop')}<span class=\"filepond--label-action\"> ${salla.lang.get('common.uploader.browse')} </span>`;\n  }\n\n  /**\n   *\n   * This method will fire head request to get the file size, it's head request,so it will be too fast.\n   */\n  private getFileSize(url: string) {\n    let http = new XMLHttpRequest();\n    http.open('HEAD', url, false); // false = Synchronous\n    http.send(null); // it will stop here until this http request is complete\n\n    return http.status === 200 ? http.getResponseHeader('content-length') : '';\n  }\n\n  private getFormDataFileInput(): HTMLInputElement {\n    return this.host.querySelector('.filepond--data input');\n  }\n\n  private getFiles() {\n    if (!this.value && !this.files) {\n      return [];\n    }\n    try {\n      let files = this.files\n        ? JSON.parse(this.files)\n        : this.value.split(',').map(file => ({url: file}));\n      if (files.length) {\n        this.host.closest('.s-product-options-option')?.setAttribute('data-has-value', 'true');\n      }\n      return files.map(file => ({\n        source: file.id ? `${file.id}` : file.url,\n        options: {\n          type: 'local',\n          file: {\n            name: file.url.substring(file.url.lastIndexOf('/') + 1),\n            size: this.getFileSize(file.url)\n          },\n          metadata: {poster: file.url, name: file.url, id: file.id},\n        },\n      }));\n    } catch (e) {\n      salla.log('failed To get files from: ' + (this.files || this.value));\n    }\n    return [];\n  }\n\n  componentWillLoad() {\n    if (!this.labelIdle) {\n      this.labelIdle = this.host.innerHTML;\n      this.host.innerHTML = '';\n    }\n  }\n\n  render() {\n    return (\n      <Host class={{\n        \"s-file-upload\": true,\n        \"s-file-upload-profile-image\": this.profileImage,\n      }}>\n        <input\n          type=\"file\"\n          name={this.name}\n          value={this.value}\n          ref={ele => this.fileUploader = ele}\n          required={this.required}\n          class=\"s-file-upload-wrapper s-file-upload-input\"\n          accept={this.accept}/>\n\n          {/* Workaround to handle native validation on the file input */}\n          <input class=\"s-hidden\" name={'hidden-'+this.name} required={this.required} value={this.value} ref={input => this.hiddenInput = input} />\n      </Host>\n    );\n  }\n\n  componentDidLoad() {\n    let files = this.getFiles();\n    this.filepond = FilePond.create(\n      this.fileUploader,\n      {\n        name: this.payloadName || this.name,\n        //@ts-ignore\n        files: files,\n        required: this.required,\n        disabled: this.disabled,\n        allowDrop: this.allowDrop,\n        allowBrowse: this.allowBrowse,\n        allowPaste: this.allowPaste,\n        allowMultiple: this.allowMultiple,//||files.length,\n        allowReplace: this.allowReplace,\n        allowRevert: this.allowRevert,\n        allowProcess: this.allowProcess,\n        allowReorder: this.allowReorder,\n        storeAsFile: this.storeAsFile,\n        forceRevert: this.forceRevert,\n        maxFiles: this.maxFilesCount,\n        maxParallelUploads: this.maxParallelUploads,\n        checkValidity: this.checkValidity,\n        itemInsertLocation: this.itemInsertLocation,\n        itemInsertInterval: this.itemInsertInterval,\n        credits: this.credits,\n        dropOnPage: this.dropOnPage,\n        dropOnElement: this.dropOnElement,\n        dropValidation: this.dropValidation,\n        ignoredFiles: this.ignoredFiles,\n        onaddfile: (error, file) => this.addedHandler(error, file),\n        server: {\n          url: this.url,\n          method: this.method,\n          // @ts-ignore\n          process: {\n            onload: response => {\n              let url = JSON.parse(response).data;\n              this.value = url.filePath || url.url;\n\n              this.uploadedHandler();\n              return this.value;\n            },\n            headers: salla.api.getHeaders(),\n            onerror: response => {\n              try {\n                let field = JSON.parse(response).error.fields;\n                field = field[this.payloadName || this.name]\n                return (field && field[0]) || salla.lang.get('common.errors.error_occurred');\n              } catch (e) {\n                salla.log('FileUpload:: Error', e);\n                return salla.lang.get('common.errors.error_occurred');\n              }\n            },\n            ondata: formData => {\n              if (this.payloadName && this.payloadName != this.name) {\n                formData.append(this.payloadName, this.filepond.getFile(0).file);\n                formData.delete(this.name);\n              }\n              if (this.cartItemId) {\n                formData.append('cart_item_id', this.cartItemId);\n              }\n              try {\n                Object.entries(JSON.parse(this.formData)).forEach((value: [string, string]) => value[1] && formData.append(value[0], value[1]));\n              } catch (e) {\n                salla.log('Error to inject formData', e);\n              }\n              return formData;\n            }\n          },\n        },\n        instantUpload: this.instantUpload,\n        chunkUploads: this.chunkUploads,\n        chunkForce: this.chunkForce,\n        chunkSize: this.chunkSize,\n        chunkRetryDelays: this.chunkRetryDelays,\n        labelDecimalSeparator: this.labelDecimalSeparator,\n        labelThousandsSeparator: this.labelThousandsSeparator,\n        labelIdle: this.getLabel(),\n        acceptedFileTypes: this.accept.replace(/\\s+/g, '').split(','),\n        labelFileTypeNotAllowed: salla.lang.get('common.uploader.invalid_type'),\n        fileValidateTypeLabelExpectedTypes: '{allButLastType}, {lastType}',\n        labelMaxFileSizeExceeded: salla.lang.get('common.uploader.too_large'),\n        labelMaxFileSize: '{filesize}',\n        maxFileSize: this.maxFileSize,\n        // onprocessfile: (error, file) =>salla.log(error, JSON.parse(file.serverId)),\n        beforeRemoveFile: (deletedFile: FilePondFile) =>\n          new Promise((resolve) => {\n            this.removedHandler(deletedFile);\n            resolve(true);\n          }),\n      }\n    );\n\n    this.hiddenInput.addEventListener('invalid', e => {\n      this.invalidInput.emit(e);\n    });\n    this.hiddenInput.addEventListener('change', () => {\n      this.hiddenInput.setCustomValidity('');\n      this.hiddenInput.reportValidity();\n    });\n  }\n}\n"]}