/*!
 * Crafted with ❤ by Salla
 */
import { h } from '@stencil/core';
export class SallaProgressBar {
  constructor() {
    this.donation = undefined;
    this.target = undefined;
    this.value = undefined;
    this.height = "10px";
    this.header = undefined;
    this.stripped = undefined;
    this.message = undefined;
    this.unit = undefined;
    this.color = undefined;
    try {
      if (this.donation) {
        let donationJson = typeof this.donation == 'string' ? JSON.parse(this.donation) : this.donation;
        if (donationJson.can_donate && donationJson.target_amount) {
          this.value = donationJson.collected_amount;
          this.target = donationJson.target_amount;
          this.header = salla.lang.get('pages.products.target');
          this.message = donationJson.target_end_date == '0000-00-00' ? '' : salla.lang.get('pages.products.donation_target_date') + ' ' + donationJson.target_end_date;
        }
        else {
          //in case the product is not enabled target campaign
          this.message = donationJson.target_amount
            ? donationJson.target_message
            : '';
        }
      }
    }
    catch (e) {
      salla.log('Wrong donation json');
    }
    salla.lang.onLoaded(() => {
      var _a, _b;
      this.header = (_a = this.header) === null || _a === void 0 ? void 0 : _a.replace('pages.products.target', salla.lang.get('pages.products.target'));
      this.message = (_b = this.message) === null || _b === void 0 ? void 0 : _b.replace('pages.products.donation_target_date', salla.lang.get('pages.products.donation_target_date'));
    });
    salla.onReady(() => {
      this.color = this.color || salla.config.get('theme.color.primary', "#ffd5c4");
      if (!this.unit) {
        this.unit = salla.config.currency().symbol;
      }
    });
  }
  getPercentage() {
    return (this.value / this.target) * 100;
  }
  render() {
    if (!this.target && !this.message) {
      return '';
    }
    return (h("div", { class: "s-progress-bar-container" }, this.header ? h("div", { class: "s-progress-bar-header" }, this.header) : '', this.getProgressBar(), this.message ? h("span", { class: "s-progress-bar-message" }, this.message) : ''));
  }
  getProgressBar() {
    return this.target ? [
      h("div", { class: "s-progress-bar-target-section" }, h("span", null, salla.helpers.number(this.value), " ", this.unit), h("span", null, salla.helpers.number(this.target), " ", this.unit)),
      h("div", { class: "s-progress-bar-wrapper", style: { 'height': this.height } }, h("div", { class: { "s-progress-bar-progress": true, 's-progress-bar-progress-stripped': this.stripped }, style: { 'width': `${this.getPercentage()}%`, 'background-color': this.color } }))
    ] : '';
  }
  static get is() { return "salla-progress-bar"; }
  static get originalStyleUrls() {
    return {
      "$": ["salla-progress-bar.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["salla-progress-bar.css"]
    };
  }
  static get properties() {
    return {
      "donation": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string | Donation",
          "resolved": "Donation | string",
          "references": {
            "Donation": {
              "location": "import",
              "path": "../salla-product-options/interfaces"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "You can just pass the donation as json string ex: `{\"target_message\":null,\"target_date\":\"2023-04-18\",\"target_end_date\":\"2023-04-18\",\"target_amount\":400,\"collected_amount\":380,\"can_donate\":true}`"
        },
        "attribute": "donation",
        "reflect": false
      },
      "target": {
        "type": "number",
        "mutable": true,
        "complexType": {
          "original": "number",
          "resolved": "number",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "The goal of the progress bar"
        },
        "attribute": "target",
        "reflect": false
      },
      "value": {
        "type": "number",
        "mutable": true,
        "complexType": {
          "original": "number",
          "resolved": "number",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "The progress so far as of the goal."
        },
        "attribute": "value",
        "reflect": false
      },
      "height": {
        "type": "string",
        "mutable": true,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Set height for the wrapper."
        },
        "attribute": "height",
        "reflect": false,
        "defaultValue": "\"10px\""
      },
      "header": {
        "type": "string",
        "mutable": true,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Big Title, before the progress bar."
        },
        "attribute": "header",
        "reflect": false
      },
      "stripped": {
        "type": "boolean",
        "mutable": true,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Stripped effect for tje progress bar."
        },
        "attribute": "stripped",
        "reflect": false
      },
      "message": {
        "type": "string",
        "mutable": true,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Subtitle under the progress bar or instead of it if the target not being set."
        },
        "attribute": "message",
        "reflect": false
      },
      "unit": {
        "type": "string",
        "mutable": true,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "The unite to be added after the numbers, defaults to: `salla.config.currency().symbol`"
        },
        "attribute": "unit",
        "reflect": false
      },
      "color": {
        "type": "string",
        "mutable": true,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Progress bar color, defaults to: `salla.config.get('theme.color.primary', \"#ffd5c4\")`"
        },
        "attribute": "color",
        "reflect": false
      }
    };
  }
}
//# sourceMappingURL=salla-progress-bar.js.map
