{"version":3,"file":"salla-color-picker.js","sourceRoot":"","sources":["../../../src/components/salla-color-picker/salla-color-picker.tsx"],"names":[],"mappings":"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","sourcesContent":["import {Component, Prop, h, Host, Element, Event, EventEmitter, State, Method} from '@stencil/core';\nimport Picker from 'vanilla-picker';\nimport {Color, Options} from './interfaces'\nimport ArrowDown from \"../../assets/svg/keyboard_arrow_down.svg\"\n\n@Component({\n  tag: 'salla-color-picker',\n  styleUrl: 'salla-color-picker.scss',\n})\nexport class SallaColorPicker {\n  private picker: Picker;\n  private colorInput: HTMLInputElement;\n  @State() widgetColor: string;\n  @Element() host: HTMLElement;\n  private canvas: HTMLDivElement;\n\n  /**\n   * File input name for the native formData\n   */\n  @Prop() name: string = 'color';\n\n  /**\n   * Set if the color picker input is required or not\n   */\n  @Prop() required: boolean = false;\n\n  /**\n   * Initial color for the picker.\n   */\n  @Prop({reflect: true, mutable: true}) color: string\n\n  /**\n   * How to display the selected color in the text field\n   * (the text field still supports input in any format).\n   */\n  @Prop() format: 'hex' | 'hsl' | 'rgb' = 'hex';\n\n  /**\n   * Whether to have a \"Cancel\" button which closes the popup.\n   */\n  @Prop() showCancelButton: boolean = false;\n\n  /**\n   * Whether to show a text field for color value editing.\n   */\n  @Prop() showTextField: boolean = true;\n\n  /**\n   * Whether to enable adjusting the alpha channel.\n   */\n  @Prop() enableAlpha: boolean = false;\n\n  /** EVENTS */\n  /**\n   * Event whenever the color changes.\n   */\n  @Event() colorChanged: EventEmitter<Color>;\n\n  /**\n   * Event emitted when the input is invalid.\n   */\n  @Event() invalidInput: EventEmitter<any>;\n\n  colorChangeHandler(color: Color) {\n    this.colorInput.value = color.hex;\n    this.colorChanged.emit(color);\n  }\n\n  /**\n   * Event emitter when the user clicks \"Ok\".\n   */\n  @Event() submitted: EventEmitter<Color>;\n\n  submittedHandler(color: Color) {\n    this.setColorValue(color.rgbaString, true)\n    this.canvas.style.backgroundColor = color.rgbString;\n    this.colorInput.value = color.hex;\n    this.colorInput.dispatchEvent(new window.Event('change', {bubbles: true}))\n    this.submitted.emit(color);\n  }\n\n  /**\n   * Event emitter when the popup opens.\n   */\n  @Event() popupOpened: EventEmitter<Color>;\n\n  popupOpenedHandler(color: Color) {\n    this.setPopInPosition()\n    this.popupOpened.emit(color);\n  }\n\n  /**\n   * Event emitter when the popup closes.\n   */\n  @Event() popupClosed: EventEmitter<Color>;\n\n  popupClosedHandler(color: Color) {\n    this.popupClosed.emit(color);\n  }\n\n  /** Methods */\n  /**\n   * Set the picker options.\n   *\n   * (Usually a new .parent and .color).\n   * @param {Object} options\n   */\n  @Method()\n  async setPickerOption(options: Options) {\n    this.picker.setOptions(options)\n  }\n\n  /**\n   * Move the popup to a different parent, optionally opening it at the same time.\n   *\n   * (Usually a new .parent and .color).\n   * @param {Options} option\n   *\n   * Whether to open the popup immediately.\n   * @param {boolean} openImmediately\n   */\n  @Method()\n  async movePopUp(options: Options, openImmediately: boolean) {\n    this.picker.movePopup(options, openImmediately)\n  }\n\n  /**\n   * Set/initialize the picker's color.\n   *\n   * Color name, RGBA/HSLA/HEX string, or RGBA array.\n   * @param {string} color\n   *\n   * If true, won't trigger onChange.\n   * @param {boolean} triggerEvent\n   */\n  @Method()\n  async setColorValue(color: string, triggerEvent: boolean) {\n    this.picker.setColor(color, triggerEvent)\n  }\n\n  /**\n   * Show/open the picker.\n   */\n  @Method()\n  async openPicker() {\n    this.picker.show()\n  }\n\n  /**\n   * Close/Hide the picker.\n   */\n  @Method()\n  async closePicker() {\n    this.picker.hide()\n  }\n\n  /**\n   * Release all resources used by this picker instance.\n   */\n  @Method()\n  async destroyPicker() {\n    this.picker.destroy()\n  }\n\n  componentWillLoad() {\n    salla.onReady(() => {\n      this.color = this.color ? this.color : salla.config.get('theme.color.primary', '#5dd5c4');\n    })\n  }\n\n  private setPopInPosition() {\n    const popup = this.host.querySelector('.picker_wrapper') as HTMLElement;\n    const widgetPosition = (this.host.querySelector('.s-color-picker-widget') as HTMLElement).getBoundingClientRect();\n    const widgetToWindowEq = window.innerWidth / 2 - widgetPosition.width / 2;\n    const widgetInLeft = widgetToWindowEq > widgetPosition.x;\n    const widgetInRight = widgetToWindowEq < widgetPosition.x;\n    const widgetInCenter = widgetToWindowEq === widgetPosition.x;\n    const isMobile = window.innerWidth < 768;\n    if (isMobile && widgetInLeft) {\n      popup.style.left = '0';\n    }\n    if (isMobile && (widgetInRight)) {\n      popup.style.left = 'auto';\n    }\n    if (!isMobile || (isMobile && ((!widgetInRight && !widgetInLeft) || widgetInCenter))) {\n      popup.style.left = `-95px`;\n    }\n  }\n\n\n  private initColorPicker() {\n    this.picker = new Picker({\n      parent: this.host,\n      color: this.color,\n      popup: 'bottom',\n      // template: string,\n      // layout: string,\n      alpha: this.enableAlpha,\n      editor: this.showTextField,\n      editorFormat: this.format,\n      cancelButton: this.showCancelButton,\n      onChange: (color: Color) => this.colorChangeHandler(color),\n      onDone: (color: Color) => this.submittedHandler(color),\n      onOpen: (color: Color) => this.popupOpenedHandler(color),\n      onClose: (color: Color) => this.popupClosedHandler(color),\n    });\n  }\n\n  render() {\n    return (\n      <Host class=\"s-color-picker-main\">\n        <slot name=\"widget\">\n          <div class=\"s-color-picker-widget\">\n            <div class=\"s-color-picker-widget-canvas\" ref={dv => this.canvas = dv}/>\n            <span innerHTML={ArrowDown}/>\n          </div>\n        </slot>\n        <input class=\"s-hidden\" name={this.name} required={this.required} value={this.color}\n               ref={color => this.colorInput = color}/>\n      </Host>\n    );\n  }\n\n  componentDidLoad() {\n    this.canvas.style.backgroundColor = this.color;\n    this.initColorPicker()\n\n    this.colorInput.addEventListener('invalid', e => {\n      this.invalidInput.emit(e);\n    });\n    this.colorInput.addEventListener('input', () => {\n      this.colorInput.setCustomValidity('');\n      this.colorInput.reportValidity();\n    });\n  }\n}\n"]}