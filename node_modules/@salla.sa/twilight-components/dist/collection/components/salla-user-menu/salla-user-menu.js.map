{"version":3,"file":"salla-user-menu.js","sourceRoot":"","sources":["../../../src/components/salla-user-menu/salla-user-menu.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAC,MAAM,eAAe,CAAC;AACvE,QAAQ;AACR,OAAO,SAAS,MAAM,0CAA0C,CAAA;AAChE,OAAO,QAAQ,MAAM,gCAAgC,CAAA;AACrD,OAAO,SAAS,MAAM,kCAAkC,CAAA;AACxD,OAAO,iBAAiB,MAAM,2BAA2B,CAAA;AACzD,OAAO,YAAY,MAAM,2BAA2B,CAAA;AACpD,OAAO,WAAW,MAAM,kCAAkC,CAAA;AAC1D,OAAO,UAAU,MAAM,+BAA+B,CAAA;AACtD,OAAO,MAAM,MAAM,6BAA6B,CAAA;AAChD,OAAO,IAAI,MAAM,4BAA4B,CAAC;AAC9C,OAAO,UAAU,MAAM,kCAAkC,CAAC;AAE1D;;;GAGG;AAKH,MAAM,OAAO,aAAa;EACxB;;IAmDQ,UAAK,GAAQ;MACnB,aAAa,EAAE,QAAQ;MACvB,MAAM,EAAE,SAAS;MACjB,cAAc,EAAE,iBAAiB;MACjC,QAAQ,EAAE,YAAY;MACtB,OAAO,EAAE,WAAW;KACrB,CAAC;IA4CM,mBAAc,GAAG,GAAG,EAAE;MAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC,CAAA;0BA1CkC,KAAK;kBACb,KAAK;yBACC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,6BAA6B,CAAC;kBACpD,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC;0BAC9B,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,8BAA8B,CAAC;oBACpD,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC;mBACzC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC;kBACxC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC;kBACtC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC;iBACvC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC;sBACjC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,EAAE;qBAC3C,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,EAAE;kBAC5C,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC;;kBAEzE;MACrB,aAAa,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;MACjF,cAAc,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;KACpF;qBAE6B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC;kBAIhG,KAAK;sBAKD,KAAK;sBAKL,KAAK;4BAKC,KAAK;uBAMzB,CAAC;IAvG9B,sCAAsC;IACtC,4BAA4B;IAC5B,KAAK;IAEL,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;MACvB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;MACnE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;MACrD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;MACrE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;MACzD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;MACvD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;MACpD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;MACrD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,4BAA4B;IAC5B,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE;MACzC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;KAC1B;IACD,gCAAgC;IAChC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC;IAE/B,IAAI,CAAC,WAAW,GAAG,CAAA,MAAA,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,0CAAE,SAAS,KAAI,+XAA+X,CAAC;IAC7c,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE;MACjB,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;QAC1B,OAAO;OACR;MAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;MACxB;;;;;;;;;;SAUG;MACH,IAAI,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,wBAAwB,CAAC;WAC1C,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,+BAA+B,CAAC;WAClD,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,kBAAkB,CAAC;WACrC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE;QAClF,IAAI,CAAC,iBAAiB,EAAE,CAAC;OAC1B;IACH,CAAC,CAAC,CAAC;GACJ;EA0DO,iBAAiB;IACvB,uEAAuE;IACvE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE;MACpB,KAAK,CAAC,GAAG,CAAC,yDAAyD,CAAC,CAAC;MACrE,OAAO;KACR;IACD,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE;OACrB,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;MACZ,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,CAAC,CAAC;MAChF,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,CAAC;MAC9E,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;MAC3F,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;MACtC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;MACpC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;EACP,CAAC;EAED,KAAK,CAAC,IAAI,CAAC,CAAC;IACV,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAC3B,CAAC,CAAC,eAAe,EAAE,CAAA;IACnB,IAAI,IAAI,CAAC,MAAM,EAAE;MACf,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;KACvD;EACH,CAAC;EAEO,eAAe,CAAC,KAAY,EAAE,IAAc;IAClD,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;MACxB,OAAO;KACR;IACD,KAAK,CAAC,cAAc,EAAE,CAAC;IACvB,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;EACtB,CAAC;EAEO,YAAY;IAClB,OAAO,WAAK,KAAK,EAAE;QACjB,0BAA0B,EAAE,IAAI;QAChC,qBAAqB,EAAE,IAAI,CAAC,SAAS;QACrC,iCAAiC,EAAE,IAAI,CAAC,UAAU;OACnD,EACW,EAAE,EAAC,cAAc,EAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,WAAW;SACpF,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC;SACjC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,UAAU,CAAC;SAC3C,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC;SACzC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC;SACnC,OAAO,CAAC,WAAW,EAAE,SAAS,CAAC,GAC5B,CAAC;EACT,CAAC;EAEO,WAAW,CAAC,IAAW,EAAE,CAAS;IACxC,sCAAsC;IACtC,OAAO,UAAI,KAAK,EAAE;QAChB,2BAA2B,EAAE,IAAI;QACjC,kCAAkC,EAAE,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM;OAC/E;MACC,SAAG,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC;QAClF,SAAG,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,QAAO;QAC5B,YAAM,KAAK,EAAC,iCAAiC,IAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAQ;QACnE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;UACpD,CAAC,CAAC,YAAM,KAAK,EAAC,iCAAiC,IAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAQ;UAC7E,CAAC,CAAC,EAAE,CACJ,CACD,CAAC;EACR,CAAC;EAED,qBAAqB;IACnB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;MAChB,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;KAC1D;EACH,CAAC;EAED,MAAM;IACJ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;MACrB,OAAO,EAAC,IAAI;QACV,YAAM,IAAI,EAAC,WAAW;UACpB,cAAQ,KAAK,EAAC,uBAAuB,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,EAChF,SAAS,EAAE,UAAU,GACpB,CACJ,CACF,CAAA;KACR;IAED,IAAI,IAAI,CAAC,MAAM,EAAE;MACf,OAAO,EAAC,IAAI;QACV,UAAI,KAAK,EAAC,oBAAoB,IAC3B,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CACpE,CACA,CAAA;KACR;IAED,OAAO,CACL,EAAC,IAAI;MACH,WAAK,KAAK,EAAE,EAAC,qBAAqB,EAAE,IAAI,EAAE,+BAA+B,EAAE,IAAI,CAAC,gBAAgB,EAAC;QAC9F,IAAI,CAAC,YAAY,EAAE;QACpB,WAAK,KAAK,EAAE,EAAC,qBAAqB,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAC;UAC9D,WAAK,KAAK,EAAC,sBAAsB,EAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,eAAe,EAAE;YAClE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,WAAK,KAAK,EAAC,6BAA6B;cACzD,WAAK,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,EAAE,GAAG;cACrE,WAAK,KAAK,EAAC,qCAAqC;gBAC9C,gBAAO,IAAI,CAAC,KAAK,CAAQ;gBACzB;kBAAI,IAAI,CAAC,UAAU;;kBAAG,IAAI,CAAC,SAAS,CAAK,CACrC;cACN,cAAQ,KAAK,EAAC,mCAAmC,EAAC,SAAS,EAAE,MAAM,EAC3D,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,GACjC,CACL,CAAC,CAAC,CAAC,EAAE;YACX,UAAI,KAAK,EAAC,2BAA2B,IAClC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CACpE,CACD,CACF,CACF,CACD,CACR,CAAC;EACJ,CAAC;EAED,gBAAgB;;IACd,2DAA2D;IAC3D,MAAA,QAAQ,CAAC,gBAAgB,0CAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;EACzE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import {Component, Host, h, State, Element, Prop} from '@stencil/core';\n// Icons\nimport ArrowDown from \"../../assets/svg/keyboard_arrow_down.svg\"\nimport BellRing from \"../../assets/svg/bell-ring.svg\"\nimport OrderIcon from \"../../assets/svg/box-bankers.svg\"\nimport PendingOrdersIcon from \"../../assets/svg/cart.svg\"\nimport WishListIcon from \"../../assets/svg/star.svg\"\nimport ProfileIcon from \"../../assets/svg/user-circle.svg\"\nimport LogoutIcon from \"../../assets/svg/send-out.svg\"\nimport Cancel from \"../../assets/svg/cancel.svg\"\nimport Rate from \"../../assets/svg/star2.svg\";\nimport UserCircle from \"../../assets/svg/user-circle.svg\";\n\n/**\n * @slot trigger - Replaces trigger widget, has replaceable props `{avatar}`, `{hello}`, `{first_name}`, `{last_name}`, `{icon}`.\n * @slot login-btn - Replaces the login button, it must be used with `salla.event.dispatch('login::open')` to open the login modal.\n */\n@Component({\n  tag: 'salla-user-menu',\n  styleUrl: 'salla-user-menu.scss',\n})\nexport class SallaUserMenu {\n  constructor() {\n\n    // salla.auth.event.onLoggedIn(() => {\n    //   this.is_loggedIn = true\n    // })\n\n    salla.lang.onLoaded(() => {\n      this.notifications = salla.lang.get(\"common.titles.notifications\");\n      this.orders = salla.lang.get(\"common.titles.orders\");\n      this.pending_orders = salla.lang.get(\"common.titles.pending_orders\");\n      this.wishlist = salla.lang.get(\"common.titles.wishlist\");\n      this.profile = salla.lang.get(\"common.titles.profile\");\n      this.hello = salla.lang.get(\"pages.checkout.hello\");\n      this.rating = salla.lang.get(\"common.titles.rating\");\n      this.logout = salla.lang.get(\"blocks.header.logout\");\n    });\n\n    //we need it only in theme-y\n    if (this.host.hasAttribute('with-rating')) {\n      this.items.rating = Rate;\n    }\n    //we need it to be the last item\n    this.items.logout = LogoutIcon;\n\n    this.triggerSlot = this.host.querySelector('[slot=\"trigger\"]')?.innerHTML || '<div class=\"s-user-menu-trigger\"><div class=\"s-user-menu-avatar-wrap\"><img class=\"s-user-menu-trigger-avatar\" src=\"{avatar}\" alt=\"{first_name}{last_name}\" /></div><div class=\"s-user-menu-trigger-content\"><span class=\"s-user-menu-trigger-hello\">{hello}</span><p class=\"s-user-menu-trigger-name\">{first_name} {last_name}</p></div> <i class=\"s-user-menu-trigger-icon\">{icon}</i></div>';\n    salla.onReady(() => {\n      if (salla.config.isGuest()) {\n        return;\n      }\n\n      this.is_loggedIn = true;\n      /**\n       * Get Fresh Notifications In These Cases:\n       * - is notification page, if user already changed the status of his orders (to reset notification badge)\n       * - is pending orders page, if user already changed the status of his orders (to reset orders badge)\n       * - is profile page, in case user changed his name or avatar, we need to update it\n       * - half hour is passed from the last user data fetched\n       *\n       * //todo:: update the data in the storage in customer pages\n       * //todo:: cover two requests in customer pages\n       * //todo:: make sure to run this only after token is set\n       */\n      if (salla.url.is_page('customer.notifications')\n        || salla.url.is_page('customer.orders.index.pending')\n        || salla.url.is_page('customer.profile')\n        || ((Date.now() - (salla.storage.get('user.fetched_at') || 0)) / 1000 / 60) > 30) {\n        this.fetchFreshProfile();\n      }\n    });\n  }\n\n  private items: any = {\n    notifications: BellRing,\n    orders: OrderIcon,\n    pending_orders: PendingOrdersIcon,\n    wishlist: WishListIcon,\n    profile: ProfileIcon,\n  };\n\n  @Element() host: HTMLElement;\n  private readonly triggerSlot: string;\n  @State() accountLoading: boolean = false;\n  @State() opened: boolean = false;\n  @State() notifications: string = salla.lang.get(\"common.titles.notifications\");\n  @State() orders: string = salla.lang.get(\"common.titles.orders\");\n  @State() pending_orders: string = salla.lang.get(\"common.titles.pending_orders\");\n  @State() wishlist: string = salla.lang.get(\"common.titles.wishlist\");\n  @State() profile: string = salla.lang.get(\"common.titles.profile\");\n  @State() rating: string = salla.lang.get(\"common.titles.rating\");\n  @State() logout: string = salla.lang.get(\"blocks.header.logout\");\n  @State() hello: string = salla.lang.get(\"pages.checkout.hello\");\n  @State() first_name: string = salla.storage.get('user.first_name') || '';\n  @State() last_name: string = salla.storage.get('user.last_name') || '';\n  @State() avatar: string = salla.storage.get('user.avatar') || salla.url.cdn('images/avatar.png');\n  @State() is_loggedIn: boolean;\n  @State() badges: any = {\n    notifications: salla.helpers.number(salla.storage.get('user.notifications') || 0),\n    pending_orders: salla.helpers.number(salla.storage.get('user.pending_orders') || 0)\n  };\n\n  @State() hasBadges: boolean = Number(salla.storage.get('user.pending_orders')) > 0 || Number(salla.storage.get('user.notifications')) > 0;\n  /**\n   * To display only the list without the dropdown functionality\n   */\n  @Prop({reflect: true}) inline: boolean = false;\n\n  /**\n   * To display the trigger as an avatar only\n   */\n  @Prop({reflect: true}) avatarOnly: boolean = false;\n\n  /**\n   * To display the dropdown header in mobile sheet\n   */\n  @Prop({reflect: true}) showHeader: boolean = false;\n\n  /**\n   * To Make the dropdown menu relative to parent element or not\n   */\n  @Prop({reflect: true}) relativeDropdown: boolean = false;\n\n  private onClickOutside = () => {\n    this.opened = false;\n  }\n\n  @State() OrderUpdate: number = 0;\n\n  private fetchFreshProfile() {\n    //don't request fetchFreshProfile unless token is injected into the api\n    if (!salla.api.token) {\n      salla.log('trying to fetchFreshProfile before injected the token!!');\n      return;\n    }\n    salla.profile.api.info()\n      .then((res) => {\n        this.badges.pending_orders = salla.helpers.number(res.data.pending_orders || 0);\n        this.badges.notifications = salla.helpers.number(res.data.notifications || 0);\n        this.hasBadges = Number(res.data.pending_orders) > 0 || Number(res.data.notifications) > 0;\n        this.first_name = res.data.first_name;\n        this.last_name = res.data.last_name;\n        this.avatar = res.data.avatar || salla.url.cdn('images/avatar.png');\n      });\n  }\n\n  async open(e) {\n    this.opened = !this.opened;\n    e.stopPropagation()\n    if (this.opened) {\n      window.addEventListener('click', this.onClickOutside);\n    }\n  }\n\n  private menuItemClicked(event: Event, item: string[]) {\n    if (item[0] !== 'logout') {\n      return;\n    }\n    event.preventDefault();\n    salla.auth.logout();\n  }\n\n  private getTheHeader() {\n    return <div class={{\n      's-user-menu-trigger-slot': true,\n      's-user-menu-red-dot': this.hasBadges,\n      's-user-menu-trigger-avatar-only': this.avatarOnly\n    }}\n                id='trigger-slot' onClick={(e) => this.open(e)} innerHTML={this.triggerSlot\n      .replace(/\\{hello\\}/g, this.hello)\n      .replace(/\\{first_name\\}/g, this.first_name)\n      .replace(/\\{last_name\\}/g, this.last_name)\n      .replace(/\\{avatar\\}/g, this.avatar)\n      .replace(/\\{icon\\}/g, ArrowDown)}>\n    </div>;\n  }\n\n  private getMenuItem(item: any[], i: number) {\n    //todo:: enhancement support slot here\n    return <li class={{\n      's-user-menu-dropdown-item': true,\n      's-user-menu-dropdown-item-logout': i + 1 == Object.entries(this.items).length\n    }}>\n      <a href={salla.url.get(item[0])} onClick={event => this.menuItemClicked(event, item)}>\n        <i innerHTML={item[1]}> </i>\n        <span class=\"s-user-menu-dropdown-item-title\">{this[item[0]]}</span>\n        {!['٠', '0', undefined].includes(this.badges[item[0]])\n          ? <span class=\"s-user-menu-dropdown-item-badge\">{this.badges[item[0]]}</span>\n          : \"\"}\n      </a>\n    </li>;\n  }\n\n  componentShouldUpdate() {\n    if (!this.opened) {\n      window.removeEventListener('click', this.onClickOutside);\n    }\n  }\n\n  render() {\n    if (!this.is_loggedIn) {\n      return <Host>\n        <slot name='login-btn'>\n          <button class=\"s-user-menu-login-btn\" onClick={() => salla.event.dispatch('login::open')}\n                  innerHTML={UserCircle}>\n          </button>\n        </slot>\n      </Host>\n    }\n\n    if (this.inline) {\n      return <Host>\n        <ul class=\"s-user-menu-inline\">\n          {Object.entries(this.items).map((item, i) => this.getMenuItem(item, i))}\n        </ul>\n      </Host>\n    }\n\n    return (\n      <Host>\n        <div class={{'s-user-menu-wrapper': true, 's-user-menu-relative-dropdown': this.relativeDropdown}}>\n          {this.getTheHeader()}\n          <div class={{'s-user-menu-toggler': true, 'opened': this.opened}}>\n            <div class=\"s-user-menu-dropdown\" onClick={(e) => e.stopPropagation()}>\n              {this.showHeader ? <div class=\"s-user-menu-dropdown-header\">\n                <img src={this.avatar} alt={`${this.first_name} ${this.last_name}`}/>\n                <div class=\"s-user-menu-dropdown-header-content\">\n                  <span>{this.hello}</span>\n                  <p>{this.first_name} {this.last_name}</p>\n                </div>\n                <button class=\"s-user-menu-dropdown-header-close\" innerHTML={Cancel}\n                        onClick={() => this.opened = false}>\n                </button>\n              </div> : ''}\n              <ul class=\"s-user-menu-dropdown-list\">\n                {Object.entries(this.items).map((item, i) => this.getMenuItem(item, i))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  componentDidLoad() {\n    //make sure to load the avatar if it's lazy, we use it in Y\n    document.lazyLoadInstance?.update(this.host.querySelectorAll('.lazy'));\n  }\n}\n"]}