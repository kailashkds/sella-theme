{"version":3,"file":"salla-map.js","sourceRoot":"","sources":["../../../src/components/salla-map/salla-map.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Prop, Method, State, Event, EventEmitter, Element } from '@stencil/core';\nimport Location from '../../assets/svg/location.svg';\nimport Edit from '../../assets/svg/edit.svg';\nimport CurrentLocation from '../../assets/svg/location-target.svg';\nimport LocationMarker from '../../assets/svg/location-marker.svg';\nimport styles from './map-styles';\n\n// import google maps\nimport { Loader, LoaderOptions } from 'google-maps';\n\n@Component({\n  tag: 'salla-map',\n  styleUrl: 'salla-map.scss',\n})\nexport class SallaMap {\n  // private variables\n  private map: google.maps.Map;\n  private locationModal: HTMLSallaModalElement;\n  private marker: google.maps.Marker;\n  private defaultLat: number = 21.419421;//Mecca 🕋\n  private defaultLng: number = 39.82553;//Mecca 🕋\n  @Element() host: HTMLElement;\n  // state variables\n  @State() modalActivityTitle: string = salla.lang.get('pages.checkout.select_your_address_from_map');\n  @State() confirmButtonTitle: string = salla.lang.get('pages.checkout.confirm_address');\n  @State() locateButtonTitle: string = salla.lang.get('pages.cart.detect_location');\n  @State() locateButtonEdit: string = salla.lang.get('common.elements.edit');\n  @State() searchPlaceholder: string = salla.lang.get('pages.checkout.search_for_address');\n  @State() searchInputValue: string = null;\n  @State() formattedAddress: string = '';\n  @State() geolocationError: boolean = false;\n  @State() searchInput: HTMLInputElement;\n  @State() mapInput: HTMLInputElement;\n  @State() mapElement: HTMLElement;\n  @State() selectedLat: number;\n  @State() selectedLng: number;\n\n  constructor() {\n    salla.lang.onLoaded(() => {\n      this.modalActivityTitle = salla.lang.get('pages.checkout.select_your_address_from_map');\n      this.confirmButtonTitle = salla.lang.get('pages.checkout.confirm_address');\n      this.locateButtonTitle = salla.lang.get('pages.cart.detect_location');\n      this.locateButtonEdit = salla.lang.get('common.elements.edit');\n      this.searchPlaceholder = salla.lang.get('pages.checkout.search_for_address');\n    });\n    this.apiKey = 'AIzaSyBPhPJ4KG13ywvmeAovLRnbi7WzlsdcWKs';\n  }\n\n  private formatAddress(address: string) {\n    return address.length > 25 ? address.substring(0, 25) + '...' : address;\n  }\n\n  private getLatLng(){\n    return this.selectedLat && this.selectedLng ? `${this.selectedLat}, ${this.selectedLng}` : null\n  }\n  private getPositionAddress(location: google.maps.LatLng, submit: boolean = false) {\n    // get address and set it to search input\n    const Geocoder = new google.maps.Geocoder();\n    Geocoder.geocode(\n      {\n        location,\n      },\n      (results, status) => {\n        if (status === google.maps.GeocoderStatus.OK) {\n          if (this.searchable) {\n            this.searchInputValue = results[0].formatted_address;\n            this.searchInput.value = results[0].formatted_address;\n          }\n          if (submit) {\n            this.formattedAddress = results[0].formatted_address;\n          }\n        }\n      }\n    );\n  }\n\n  private initGoogleMaps(options: LoaderOptions, mapDOM: Element) {\n    const loader = new Loader(this.apiKey, options);\n\n    loader.load().then(google => {\n      this.map = new google.maps.Map(mapDOM, {\n        center: (this.lat || this.lng) ? {\n          lat: this.lat,\n          lng: this.lng,\n        } : {\n          lat: this.defaultLat,\n          lng: this.defaultLng,\n        },\n        zoom: this.zoom,\n        zoomControl: true,\n        mapTypeControl: false,\n        scaleControl: false,\n        streetViewControl: false,\n        rotateControl: false,\n        fullscreenControl: false,\n        disableDefaultUI: false,\n      });\n\n      this.map.setOptions({\n        styles: this.theme === 'light' ? styles.light : styles.dark,\n      });\n\n      this.marker = new google.maps.Marker({\n        position: this.map.getCenter(),\n        map: this.map,\n        icon: {\n          url: 'data:image/svg+xml;utf8,' + encodeURIComponent(LocationMarker),\n          scaledSize: new google.maps.Size(30, 30),\n        },\n      });\n\n      if (this.searchable) {\n        const searchBox = new google.maps.places.SearchBox(this.searchInput);\n        google.maps.event.addListener(searchBox, 'places_changed', () => {\n          const places = searchBox.getPlaces();\n          // goto first place\n          if (places.length > 0 && this.map) {\n            this.map.setCenter(places[0].geometry.location);\n            this.lat = places[0].geometry.location.lat();\n            this.lng = places[0].geometry.location.lng();\n            // set marker\n            this.marker.setPosition(places[0].geometry.location);\n            this.searchInputValue = places[0].formatted_address;\n            this.formattedAddress = places[0].formatted_address;\n          }\n        });\n      }\n      // add listener to map\n      google.maps.event.addListener(this.map, 'click', e => {\n        if (this.readonly) return;\n        this.marker.setPosition(e.latLng);\n        this.lat = e.latLng.lat();\n        this.lng = e.latLng.lng();\n        this.getPositionAddress(e.latLng);\n        this.mapClicked.emit({\n          lat: e.latLng.lat(),\n          lng: e.latLng.lng(),\n          address: this.formattedAddress ? this.formattedAddress : null,\n        });\n      });\n      if (!this.lat && !this.lng) {\n        this.getCurrentLocation();\n        if (this.geolocationError) {\n          this.map.setCenter({\n            lat: this.lat,\n            lng: this.lng,\n          });\n          this.marker.setPosition({\n            lat: this.lat,\n            lng: this.lng,\n          });\n        }\n      }\n    });\n  }\n\n  private getCurrentLocation() {\n    if (navigator.geolocation && this.map) {\n      navigator.geolocation.getCurrentPosition(position => {\n        // set map to this location\n        const mapOptions = {\n          center: new google.maps.LatLng(position.coords.latitude, position.coords.longitude),\n          zoom: 15,\n        };\n        this.map.setOptions(mapOptions);\n        // set marker\n        this.marker.setPosition(mapOptions.center);\n        this.getPositionAddress(mapOptions.center);\n        this.lat = position.coords.latitude;\n        this.lng = position.coords.longitude;\n        this.currentLocationChanged.emit({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n          address: this.formattedAddress ? this.formattedAddress : null,\n        });\n      }, this.handleLocationError.bind(this));\n    } else {\n      salla.log('Geolocation is not supported by this browser.');\n      this.geolocationError = true;\n    }\n  }\n\n  private handleLocationError(error) {\n    this.geolocationError = true;\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        salla.log('User denied the request for Geolocation.');\n        break;\n      case error.POSITION_UNAVAILABLE:\n        salla.log('Location information is unavailable.');\n        break;\n      case error.TIMEOUT:\n        salla.log('The request to get user location timed out.');\n        break;\n      case error.UNKNOWN_ERROR:\n        salla.log('An unknown error occurred.');\n        break;\n    }\n  }\n  componentDidLoad() {\n    // if lat and lng provided then get the formatted address\n    if (this.lat && this.lng) {\n      // get address\n      fetch(\n        `https://maps.googleapis.com/maps/api/geocode/json?latlng=${this.lat},${this.lng}&key=${this.apiKey}&language=${salla.config.get('user.language_code') ||\n        document.documentElement.lang ||\n        'ar'}`\n      )\n        .then(res => res.json())\n        .then(res => {\n          if (res.status === 'OK') {\n            this.formattedAddress = res.results[0].formatted_address;\n            this.searchInputValue = res.results[0].formatted_address;\n            this.searchInput.value = res.results[0].formatted_address;\n            this.selectedLng = this.lng;\n            this.selectedLat = this.lat;\n          }\n        }\n        );\n    }\n    this.mapInput.addEventListener('invalid', e => {\n      this.invalidInput.emit(e);\n    });\n    this.mapInput.addEventListener('input', () => {\n      this.mapInput.setCustomValidity('');\n      this.mapInput.reportValidity();\n    });\n  }\n  /**\n   * Open location component\n   */\n  @Method()\n  async open() {\n    // only init google maps on modal open :) to save resources\n    if (!this.map)\n      this.initGoogleMaps(\n        {\n          libraries: this.searchable ? ['places', 'search'] : [],\n          language:\n            salla.config.get('user.language_code') ||\n            document.documentElement.lang ||\n            'ar',\n        },\n        this.mapElement\n      );\n    return this.locationModal?.open();\n  }\n\n  /**\n   * File input name for the native formData\n   */\n  @Prop() name: string = 'location';\n\n  /**\n   * Set if the location input is required or not\n   */\n  @Prop() required: boolean = false;\n  /**\n   * Disable or enable actions\n   */\n  @Prop() readonly: boolean = false;\n\n  /**\n   * Sets the search bar visibility.\n   */\n  @Prop({ mutable: true }) searchable: boolean = false;\n\n  /**\n   * Latitude coordinate, defaults to current user location\n   */\n  @Prop({ mutable: true }) lat: number;\n\n  /**\n   * Longitude coordinate, defaults to current user location\n   */\n  @Prop({ mutable: true }) lng: number;\n\n  /**\n   * Sets google api key value, default Merchant key\n   */\n  @Prop({ mutable: true }) apiKey: string;\n\n  /**\n   * Modal Title\n   */\n  @Prop() modalTitle: string;\n\n  /**\n   * Sets start map zoom.\n   */\n\n  @Prop({ mutable: true }) zoom: number = 10;\n\n  /**\n   * Sets map style.\n   */\n  @Prop({ mutable: true }) theme: string = 'light';\n\n  /**\n   * Custom DOM event emitter when location is selected\n   */\n  @Event() selected: EventEmitter;\n\n  /**\n   * Custom DOM event emitter when map is clicked\n   */\n  @Event() mapClicked: EventEmitter;\n\n  /**\n   * Custom DOM event emitter when current location is selected\n   */\n  @Event() currentLocationChanged: EventEmitter;\n\n  /**\n   * Event emitted when the input is invalid.\n   */\n  @Event() invalidInput: EventEmitter<any>;\n  \n  // rendering functions\n  private getLocationModal() {\n    return (\n      <div>\n        <div class=\"s-map-modal-title\">{!!this.modalTitle ? this.modalTitle : this.modalActivityTitle}</div>\n        <div class=\"s-map-modal-body\">\n          <div class=\"s-map-element\" ref={el => (this.mapElement = el)}></div>\n          {this.readonly ? \"\" :\n            [\n              this.searchable && (\n                <div class=\"s-map-search-wrapper\">\n                  <input class=\"s-map-search-input\" ref={el => (this.searchInput = el)} placeholder={this.searchPlaceholder}></input>\n                </div>\n              ),\n              <salla-button\n                class=\"s-map-my-location-button\"\n                onClick={() => {\n                  this.getCurrentLocation();\n                }}\n                shape=\"icon\"\n                color=\"primary\"\n              >\n                <span innerHTML={CurrentLocation}></span>\n              </salla-button>,\n              <salla-button\n                class=\"s-map-submit-button\"\n                color=\"primary\"\n                width=\"wide\"\n                onClick={() => {\n                  let points = {\n                    lat: this.lat,\n                    lng: this.lng,\n                    address: this.formattedAddress ? this.formattedAddress : null,\n                  };\n                  salla.event.emit('salla-map::selected', points)\n                  this.selected.emit(points);\n                  this.selectedLat = points.lat;\n                  this.selectedLng = points.lng;\n                  this.getPositionAddress(new google.maps.LatLng(points.lat, points.lng), true);\n                  if (!this.selectedLat || !this.selectedLng) {\n                    this.mapInput.value = null;\n                  } else {\n                    this.mapInput.value = `${this.selectedLat}, ${this.selectedLng}`;\n                  }\n                  this.mapInput.dispatchEvent(new window.Event('change', { bubbles: true }))\n                  this.locationModal.close();\n                }}\n              >\n                {this.confirmButtonTitle}\n              </salla-button>]\n          }\n        </div>\n      </div>\n    );\n  }\n\n  // render\n  render() {\n    return (\n      <Host class=\"s-map-wrapper\">\n        <salla-modal\n          class=\"s-map-modal-wrapper\"\n          noPadding\n          ref={modal => {\n            this.locationModal = modal;\n          }}\n        >\n          {this.getLocationModal()}\n        </salla-modal>\n\n        <slot name=\"button\">\n          <salla-button\n            onClick={() => {\n              this.open();\n            }}\n            color=\"primary\"\n            class=\"s-map-location-button\"\n          >\n            <span class=\"s-map-location-icon\" innerHTML={this.formattedAddress ? Edit : Location} />\n            {this.formattedAddress ? (\n              <div>\n                {this.locateButtonEdit} | {this.formatAddress(this.formattedAddress)}\n              </div>\n            ) : (\n              this.locateButtonTitle\n            )}\n          </salla-button>\n        </slot>\n\n        <input class=\"s-hidden\" name={this.name} required={this.required} value={this.getLatLng()}\n          ref={color => this.mapInput = color} />\n      </Host>\n    );\n  }\n}\n"]}