{"version":3,"file":"salla-localization-modal.js","sourceRoot":"","sources":["../../../src/components/salla-localization-modal/salla-localization-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, h, Method, Prop, State } from '@stencil/core';\n/**\n * @slot header - The top of the modal.\n * @slot footer - Replaces the bottom button.\n * @slot language - Replaces language label, has replaceable props `{name}`, `{code}`, `{country_code}`.\n * @slot currency - Replaces currency label, has replaceable props `{name}`, `{code}`, `{country_code}`.\n */\n@Component({ tag: 'salla-localization-modal', styleUrl: 'salla-localization-modal.scss' })\n\nexport class SallaLocalizationModal {\n  constructor() {\n    salla.event.on('localization::open', () => this.open());\n\n    salla.lang.onLoaded(() => {\n      this.translationLoaded = true;\n    });\n\n    /**\n     * letting developer to insert his own slot like:\n     * <salla-localization>\n     *   <div slot=\"language\">...{name}....</div>\n     *   <div slot=\"currency\">...{name}....</div>\n     * </salla-localization>\n     * Because scoped templates not supported in stencil );\n     * we made a workaround to pass language & currency attributes, then replace names in rendering\n     */\n    this.languageSlot = this.host.querySelector('[slot=\"language\"]')?.innerHTML || '<label class=\"s-localization-modal-label\" for=\"lang-{code}\"><span>{name}</span><div class=\"s-localization-modal-flag flag iti__flag iti__{country_code}\"></div></label>';\n    this.currencySlot = this.host.querySelector('[slot=\"currency\"]')?.innerHTML || '<label class=\"s-localization-modal-label\" for=\"currency-{code}\"><span>{name}</span><small class=\"s-localization-modal-currency\">{code}</small></label>';\n  }\n\n  private modal: HTMLSallaModalElement;\n  private btn: HTMLSallaButtonElement;\n  private readonly languageSlot: string;\n  private readonly currencySlot: string;\n\n  @State() translationLoaded: boolean = false;\n  @State() languages: Array<any> = [];\n  @State() currencies: Array<any> = [];\n  @State() hasError: boolean = false;\n  @State() errorMessage: string;\n\n\n\n  /**\n   * Current language (existing or newly selected)\n   */\n  @Prop({ mutable: true, reflect: true }) language: string = salla.config.get('user.language_code');\n\n  /**\n   * Current currency (existing or newly selected)\n   */\n  @Prop({ mutable: true, reflect: true }) currency: string = salla.config.get('user.currency_code');\n\n  @Element() host: HTMLElement;\n\n  /**\n   * open the component\n   */\n  @Method()\n  async open() {\n    this.modal.open()\n    return await salla.api.withoutNotifier(() => this.getLanguages())\n      .then(() => this.getCurrencies())\n      .then(() => {\n        if (this.languages.length < 2 && this.currencies.length < 2) {\n          this.modal.close();\n        }\n      })\n      .catch(e => {\n        console.log(e)\n        this.hasError = true;\n        this.errorMessage = e.response?.data?.error?.message || e.response?.data;\n      })\n      .finally(() => this.modal.stopLoading());\n  }\n\n  /**\n   * Hide the component\n   */\n  @Method()\n  async close() {\n    return this.modal.close();\n  }\n\n  private async getLanguages() {\n    this.language = this.language || salla.config.get('user.language_code');\n    return this.languages.length > 1 ? null : await salla.config.languages().then(data => this.languages = data);\n  }\n\n  private async getCurrencies() {\n    this.currency = this.currency || salla.config.get('user.currency_code');\n    return this.currencies.length > 1 ? null : await salla.config.currencies().then(data => this.currencies = Object.values(data || {}));\n  }\n\n  private onChangeCurrency(event) {\n    this.currency = event.target.value;\n  }\n\n  private onChangeLanguage(event) {\n    this.language = event.target.value;\n  }\n\n  /**\n   * Change currency and language to the selected ones.\n   */\n  @Method()\n  async submit() {\n    let url: string;\n    this.btn.load()\n      .then(() => {\n        if (!this.currency) {\n          salla.log('There is no currency!');\n          return;\n        }\n        if (this.currency === salla.config.get('user.currency_code', 'SAR')) {\n          return;\n        }\n        url = window.location.href;\n        return salla.currency.api.change(this.currency);\n      })\n      .then(() => {\n        if (this.language !== salla.config.get('user.language_code', 'ar')) {\n          url = salla.helpers.addParamToUrl('lang', this.language)\n        }\n      })\n      .then(() => this.btn.stop())\n      .then(() => this.close())\n      .then(() => {\n        if(url){\n          window.location.href = url.replace(`/${salla.config.get('user.language_code')}/`,`/${this.language}/`);\n        }\n      });\n  }\n\n  render() {\n    return (\n      <salla-modal isLoading={true} class=\"s-hidden\" ref={modal => this.modal = modal as HTMLSallaModalElement} width=\"xs\">\n        <div slot='loading'>\n          <div class=\"s-localization-modal-skeleton\">\n            <salla-skeleton width='25%' height='15px'></salla-skeleton>\n            <div class=\"s-localization-modal-skeleton-content\">\n              {[...Array(4)].map(() =>\n                <div class=\"s-localization-modal-skeleton-item\">\n                  <div class=\"s-localization-modal-skeleton-item-flex\">\n                    <salla-skeleton type='circle' height='16px' width='16px'></salla-skeleton>\n                    <salla-skeleton height='10px' width='100px'></salla-skeleton>\n                  </div>\n                  <salla-skeleton height='15px' width='20px'></salla-skeleton>\n                </div>\n              )}\n            </div>\n            <salla-skeleton width='25%' height='15px'></salla-skeleton>\n            <div class=\"s-localization-modal-skeleton-content\">\n              {[...Array(4)].map(() =>\n                <div class=\"s-localization-modal-skeleton-item\">\n                  <div class=\"s-localization-modal-skeleton-item-flex\">\n                    <salla-skeleton type='circle' height='16px' width='16px'></salla-skeleton>\n                    <salla-skeleton height='10px' width='100px'></salla-skeleton>\n                  </div>\n                  <salla-skeleton height='15px' width='20px'></salla-skeleton>\n                </div>\n              )}\n            </div>\n            <salla-skeleton height='40px' width='100%'></salla-skeleton>\n          </div>\n        </div>\n        {!!this.hasError ?\n          <salla-placeholder alignment=\"center\">\n            <span slot=\"description\">{this.errorMessage}</span>\n          </salla-placeholder> :\n          <div class=\"s-localization-modal-inner\">\n            {this.languages.length > 1 ?\n              <div class=\"s-localization-modal-section\">\n                <label class=\"s-localization-modal-title\">{salla.lang.get('common.titles.language')}</label>\n                <div class=\"s-localization-modal-section-inner\">\n                  {this.languages.length < 6 || this.currencies.length == 1 ?\n                    this.languages.map(lang =>\n                      <div class=\"s-localization-modal-item\">\n                        <input class=\"s-localization-modal-input\" type=\"radio\"\n                          checked={this.language == lang.iso_code}\n                          onChange={() => this.language = lang.iso_code}\n                          name=\"language\"\n                          id={'lang-' + lang.code.toLowerCase()}\n                          value={lang.code} />\n                        <div class=\"s-localization-modal-label-slot\" id=\"language-slot\" innerHTML={this.languageSlot\n                          .replace(/\\{name\\}/g, lang.name)\n                          .replace(/\\{code\\}/g, lang.code)\n                          .replace(/\\{country_code\\}/g, lang.country_code)}></div>\n                      </div>\n                    ) :\n                    <select class=\"s-localization-modal-select\" name=\"language\" onChange={e => this.onChangeLanguage(e)}>\n                      {this.languages.map(lang =>\n                        <option value={lang.code} selected={this.language == lang.code}>{lang.name}</option>\n                      )}\n                    </select>\n                  }\n                </div>\n              </div>\n              : ''\n            }\n\n            {this.currencies.length > 1 ?\n              <div class=\"s-localization-modal-section\">\n                <label class=\"s-localization-modal-title\">{salla.lang.get('common.titles.currency')}</label>\n                <div class=\"s-localization-modal-section-inner\">\n                  {this.currencies.length < 6 || this.languages.length == 1 ?\n                    this.currencies.map(currency =>\n                      <div class=\"s-localization-modal-item\">\n                        <input class=\"s-localization-modal-input\" type=\"radio\"\n                          name=\"currency\"\n                          checked={this.currency == currency.code}\n                          onChange={() => this.currency = currency.code}\n                          id={'currency-' + currency.code}\n                          value={currency.code} />\n                        <div class=\"s-localization-modal-label-slot\" id=\"currency-slot\" innerHTML={this.currencySlot\n                          .replace(/\\{name\\}/g, currency.name)\n                          .replace(/\\{code\\}/g, currency.code)\n                          .replace(/\\{country_code\\}/g, currency.country_code)}></div>\n                      </div>\n                    ) :\n                    <select class=\"s-localization-modal-select\" name=\"currency\" onChange={e => this.onChangeCurrency(e)}>\n                      {this.currencies.map(currency =>\n                        <option value={currency.code} selected={this.currency == currency.code}>{currency.name}</option>\n                      )}\n                    </select>\n                  }\n                </div>\n              </div>\n              : ''\n            }\n            <salla-button width=\"wide\" ref={btn => this.btn = btn} onClick={() => this.submit()}>\n              {salla.lang.get('common.elements.ok')}\n            </salla-button>\n          </div>\n        }\n      </salla-modal>\n    );\n  }\n\n  /**\n   * to reduce dom levels we will move slot data into the parent dom\n   */\n  componentDidRender() {\n    this.host.querySelectorAll('#currency-slot').forEach(el => el.replaceWith(el.firstChild));\n    this.host.querySelectorAll('#language-slot').forEach(el => el.replaceWith(el.firstChild));\n  }\n}\n"]}