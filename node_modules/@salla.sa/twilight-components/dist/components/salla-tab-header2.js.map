{"file":"salla-tab-header2.js","mappings":";;;;;SAAgB,gBAAgB;EAC5B,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACnD;;ACFA,MAAM,iBAAiB,GAAG,EAAE;;MCcf,cAAc;;;;;IAEvB,OAAE,GAAW,gBAAgB,EAAE,CAAC;;uBAUF,SAAS;kBAKL,SAAS;oBAKf,KAAK;sBAOF,KAAK;;;;;EAK1B,MAAM,QAAQ;IACpB,OAAO;MACH,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;MAClC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;MAClC,IAAI,EAAE,IAAI,CAAC,IAAI;MACf,EAAE,EAAE,IAAI,CAAC,EAAE;KACd,CAAA;GACJ;EAED,QAAQ;IACJ,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;GAC3B;EAED,QAAQ;IACJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;GAC1B;EAED,OAAO;IACH,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,KAAK;MACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAChC,CAAC,CAAA;GACL;EAED,MAAM;IACF,MAAM,OAAO,GAAG;MACZ,oBAAoB,EAAE,IAAI;MAC1B,kBAAkB,EAAE,IAAI;MACxB,eAAe,EAAE,IAAI,CAAC,UAAU;KACnC,CAAC;IAEF,OAAO;MACH,WAAK,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IACjD,eAAQ,CACN;KACT,CAAC;GACL;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/components/salla-tabs/utils.ts","./src/components/salla-tabs/salla-tab-header.scss?tag=salla-tab-header","./src/components/salla-tabs/salla-tab-header.tsx"],"sourcesContent":["export function generateRandomId(): string {\n    return Math.random().toString(36).slice(2, 10);\n}","/*\n* Salla Tab Header Component: has many sizes, styles and loading state.\n* You can use these classes to target the elements in the component.\n*/\n\n.s-tabs {\n  &-selected {\n\n  }\n  &-header {\n\n  }\n  &-transit {\n    \n  }\n  &-default-background {\n\n  }\n  &-active {\n\n  }\n}","import {\n    Component, Prop, Event, EventEmitter, Method, State, h\n} from '@stencil/core';\n\nimport { generateRandomId } from './utils';\n/**\n * @slot The default slot.\n */\n@Component({\n    tag: 'salla-tab-header',\n    styleUrl: 'salla-tab-header.scss',\n    shadow: false,\n})\n\nexport class SallaTabHeader {\n\n    id: string = generateRandomId();\n\n    /**\n     * Header identifier name to sync with the content.\n     */\n    @Prop() name: string;\n\n    /**\n   * The class applied to the currently active(selected) tab\n   */\n    @Prop() activeClass: string = undefined;\n\n    /**\n     * Set the height of the tab bar\n     */\n    @Prop() height: number | string = undefined;\n\n    /**\n     * Center tab items in the given flex.\n     */\n    @Prop() centered: boolean = false;\n\n    /**\n     * Emits event object when clicked or selected.\n     */\n    @Event() tabSelected: EventEmitter;\n\n    @State() isSelected: boolean = false;\n\n    /**\n     * Expose self for the parent.\n     */\n    @Method() async getChild() {\n        return {\n            selected: this.selected.bind(this),\n            unselect: this.unselect.bind(this),\n            name: this.name,\n            id: this.id\n        }\n    }\n\n    unselect() {\n        this.isSelected = false;\n    }\n\n    selected() {\n        this.isSelected = true;\n    }\n\n    onClick() {\n        this.getChild().then(child => {\n            this.tabSelected.emit(child);\n        })\n    }\n\n    render() {\n        const classes = {\n            's-tabs-header-item': true,\n            's-tabs-bg-normal': true,\n            's-tabs-active': this.isSelected,\n        };\n\n        return [\n            <div class={classes} onClick={this.onClick.bind(this)} >\n                <slot />\n            </div>,\n        ];\n    }\n\n}\n"],"version":3}