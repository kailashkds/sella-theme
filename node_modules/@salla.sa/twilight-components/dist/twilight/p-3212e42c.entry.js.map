{"version":3,"names":["sallaProductsListCss","SallaProductsList","connectedCallback","salla","onReady","this","hasCustomComponent","customElements","get","sourceValueIsValid","getSourceValue","isSourceWithoutValue","hasInfiniteScroll","includes","getSource","searchParams","URLSearchParams","window","location","search","sortBy","filters","parsedFilters","JSON","parse","decodeURIComponent","e","logger","warn","message","buildNextPageUrl","createStatusDom","isReady","event","on","setFilters","async","reload","infiniteScroll","destroy","wrapper","innerHTML","init","isFilterable","config","filtersResults","animateItems","anime","targets","opacity","duration","translateY","delay","_el","i","status","document","createElement","className","lang","btnLoader","querySelector","onLoaded","placeholderText","initBaseNextPageUrl","source","nextPage","url","api","limit","key","value","Object","entries","Array","isArray","forEach","item","k","v","join","sourceValue","length","loading","isLoading","style","display","getItemHTML","product","customComponentTag","customComponent","toggleAttribute","classList","add","horizontalCards","fetchProducts","fetch","source_value","then","res","data","showPlaceholder","handleResponse","card","append","initiateInfiniteScroll","host","insertAdjacentElement","initiate","path","history","scrollThreshold","response","_a","appendItems","pageIndex","remove","loadNextPage","canRender","render","h","class","ShoppingBag","Host","ref","componentDidLoad","map","emit","cursor","next","option","loadOnScroll"],"sources":["./src/components/salla-products-list/salla-products-list.scss?tag=salla-products-list","./src/components/salla-products-list/salla-products-list.tsx"],"sourcesContent":["\n","import {Component, Host, h, Prop, State, Element, Method} from '@stencil/core';\nimport anime from 'animejs';\nimport ShoppingBag from '../../assets/svg/shopping-bag.svg';\n\n@Component({\n  tag: 'salla-products-list',\n  styleUrl: 'salla-products-list.scss'\n})\nexport class SallaProductsList {\n  connectedCallback() {\n    salla.onReady(() => {\n      this.hasCustomComponent = !!customElements.get('custom-salla-product-card');\n      this.sourceValueIsValid = !!(this.getSourceValue() || this.isSourceWithoutValue());\n      this.hasInfiniteScroll = !['json', 'selected', 'related', 'landing-page'].includes(this.getSource());\n      try {\n        let searchParams = new URLSearchParams(window.location.search);\n        this.sortBy = this.sortBy || searchParams.get('sort') || searchParams.get('by');\n        let filters = searchParams.get('filters')\n        this.parsedFilters = filters ? JSON.parse(decodeURIComponent(filters)) : {};\n      } catch (e) {\n        salla.logger.warn('failed to get filters from url', e.message);\n      }\n      this.buildNextPageUrl();\n      this.createStatusDom();\n\n      this.isReady = true;\n    });\n\n    if (!this.sourceValueIsValid) {\n      salla.logger.warn(`source-value prop is required for source [${this.getSource()}]`);\n      return;\n    }\n    salla.event.on('salla-filters::changed', filters => this.setFilters(filters))\n\n\n  }\n\n  @Method()\n  async setFilters(filters) {\n    this.parsedFilters = filters;\n    return this.reload();\n  }\n\n\n  @Method()\n  async reload() {\n    salla.infiniteScroll.destroy(this.infiniteScroll);\n    this.buildNextPageUrl();\n    this.wrapper.innerHTML = '';\n    this.init();\n  }\n\n\n  private status: HTMLDivElement;\n  private btnLoader: HTMLAnchorElement;\n  @Element() host: HTMLElement;\n  private wrapper: any;\n  private infiniteScroll: any;\n  /**\n   * The source of the products list\n   * @type {string}\n   * */\n  @Prop({\n    reflect: true,\n    mutable: true\n  }) source: 'categories' | 'latest' | 'related' | 'brands' | 'json' | 'search' | 'tags' | 'selected' | 'offers' | 'landing-page' | 'sales';\n\n  /**\n   * The source value, cloud be different values as following:\n   * - array of ids when `source` in ['categories', 'brands', 'tags', 'selected']\n   * - keyword when `source` = 'search'\n   * - products payload when `source` = 'json'\n   * - product_id when `source` = 'related'\n   *\n   * @type {string}\n   * */\n  @Prop({mutable: true}) sourceValue: any;\n\n  /**\n   * Limit for number of products in the list.\n   */\n  @Prop({mutable: true}) limit: number;\n\n  /**\n   * Sorting the list of products\n   */\n  @Prop({mutable: true}) sortBy?: string | 'ourSuggest' | 'bestSell' | 'topRated' | 'priceFromTopToLow' | 'priceFromLowToTop';\n\n  /**\n   * should listen to filters events `salla-filters::changed` and re-render\n   */\n  @Prop({reflect: true, mutable: true}) filtersResults: boolean;\n\n  /**\n   * Horizontal cards\n   */\n  @Prop({reflect: true}) horizontalCards: boolean\n\n  // State\n  @State() page: number = 1;\n  @State() nextPage: string;\n  @State() hasInfiniteScroll: boolean;\n  @State() hasCustomComponent: boolean;\n  @State() sourceValueIsValid: boolean;\n  @State() placeholderText: string;\n  @State() isReady: boolean;\n  @State() showPlaceholder: boolean;\n  @State() parsedFilters: any;\n\n  private isFilterable() {\n    return salla.config.get('store.settings.product.filters') && this.filtersResults;\n  }\n\n  private isSourceWithoutValue() {\n    return ['offers', 'latest', 'sales'].includes(this.getSource());\n  }\n\n  private animateItems() {\n    anime({\n      targets: 'salla-products-list salla-product-card',\n      opacity: [0, 1],\n      duration: 1200,\n      translateY: [20, 0],\n      delay: function (_el, i) {\n        return i * 100;\n      },\n    })\n  }\n\n  private createStatusDom() {\n    this.status = document.createElement('div');\n    this.status.className = 's-infinite-scroll-wrapper';\n    this.status.innerHTML = `<div class=\"s-infinite-scroll-status\">\n        <p class=\"s-infinite-scroll-last infinite-scroll-last s-hidden\" >${salla.lang.get('common.elements.end_of_content')}</p>\n        <p class=\"s-infinite-scroll-error infinite-scroll-error s-hidden\">${salla.lang.get('common.elements.failed_to_load_more')}</p>\n      </div>\n      <a href=\"#\" class=\"s-infinite-scroll-btn s-button-btn\">\n        <span class=\"s-button-loader s-button-loader-center s-infinite-scroll-btn-loader\" style=\"display: none\"></span>\n      </a>`;\n    this.btnLoader = this.status.querySelector('.s-button-loader');\n    salla.lang.onLoaded(() => {\n      this.status.querySelector('.s-infinite-scroll-last').innerHTML = salla.lang.get('common.elements.end_of_content');\n      this.status.querySelector('.s-infinite-scroll-error').innerHTML = salla.lang.get('common.elements.failed_to_load_more');\n      this.placeholderText = salla.lang.get('pages.categories.no_products');\n    });\n  }\n\n  private initBaseNextPageUrl(source: string) {\n\n    this.nextPage = salla.url.api(`products?source=${source}`);\n\n    if (this.limit) {\n      this.nextPage += `&per_page=${this.limit > 32 ? 32 : this.limit}`;\n    }\n    if (this.sortBy) {\n      this.nextPage += `&sort=${this.sortBy}`;\n    }\n    // if (!this.isFilterable()) {\n    //   return this.nextPage;\n    // }\n    this.nextPage += '&filterable=1';\n    for (const [key, value] of Object.entries(this.parsedFilters || {})) {\n      if ([\"string\", \"number\"].includes(typeof value)) {\n        this.nextPage += `&filters[${key}]=${value}`;\n      } else if (Array.isArray(value)) {\n        (value as any).forEach(item => this.nextPage += `&filters[${key}][]=${item}`)\n      } else if (typeof value === 'object') {\n        for (const [k, v] of Object.entries(value)) {\n          this.nextPage += `&filters[${key}][${k}]=${v}`;\n        }\n      }\n    }\n  }\n\n  private buildNextPageUrl() {\n    let source = this.getSource();\n    if (source === 'json') {\n      return;\n    }\n    this.initBaseNextPageUrl(source);\n    if (this.isSourceWithoutValue()) {\n      return;\n    }\n\n    if (['search', 'related', 'landing-page'].includes(source)) {\n      this.nextPage += `&source_value=${this.getSourceValue()}`;\n      return;\n    }\n\n    try {\n      this.nextPage += `&source_value[]=${this.getSourceValue().join('&source_value[]=')}`;\n    } catch (e) {\n      salla.logger.warn(`source-value prop should be array of ids ex source-value=\"[1,2,3]\" for the source [${source}]`);\n      this.sourceValueIsValid = false;\n    }\n  }\n\n  private getSource() {\n    return {\n      'brands.single': 'brands',\n      'product.index': 'categories',\n      'product.index.latest': 'latest',\n      'product.index.offers': 'offers',\n      'product.index.search': 'search',\n      'landing-page': 'landing-page',\n      'product.index.tag': 'tags',\n      'product.index.sales': 'sales',\n      'components.most_sales_products': 'sales',//temporary, delete it after two days from now\n    }[this.source || salla.config.get('page.slug')] || this.source || 'latest';\n  }\n\n  private getSourceValue() {\n    let source = this.getSource();\n\n    //todo:: enhance this code, it call JSON.parse too many times.\n    if (!['search', 'json', 'offers', 'latest', 'sales'].includes(source)) {\n      if (this.sourceValue && Array.isArray(JSON.parse(this.sourceValue)) && JSON.parse(this.sourceValue).length) {\n        return JSON.parse(this.sourceValue);\n      }\n\n      if (this.sourceValue && typeof JSON.parse(this.sourceValue) == 'number') {\n        return [JSON.parse(this.sourceValue)];\n      }\n      if (!this.sourceValue && ['categories', 'tags', 'brands', 'landing-page'].includes(this.getSource())) {\n        return [salla.config.get('page.id')];\n      }\n    }\n\n    if (this.sourceValue) {\n      return this.sourceValue;\n    }\n\n\n    if (source === 'search') {\n      return (new URLSearchParams(window.location.search)).get('q');\n    }\n\n    return salla.config.get('page.id');\n  }\n\n\n  private loading(isLoading = true) {\n    this.btnLoader.style.display = isLoading ? 'inherit' : 'none';\n  }\n\n  private getItemHTML(product) {\n    let customComponentTag: string = this.hasCustomComponent ? 'custom-salla-product-card' : 'salla-product-card';\n    let customComponent: HTMLSallaProductCardElement = document.createElement(customComponentTag) as HTMLSallaProductCardElement;\n    customComponent.product = product;\n    // customComponent.setAttribute('product', JSON.stringify(product));\n    if (this.getSource() == 'landing-page' && !this.hasCustomComponent) {\n      customComponent.toggleAttribute('hide-add-btn', true);\n      customComponent.classList.add('s-product-card-fit-height');\n    }\n    if (this.horizontalCards && !this.hasCustomComponent) {\n      customComponent.toggleAttribute('horizontal', true);\n      customComponent.toggleAttribute('shadow-on-hover', true);\n    }\n    return customComponent;\n  }\n\n  private fetchProducts() {\n    salla.product.fetch({\n      source: this.getSource(),\n      source_value: this.getSourceValue(),\n      limit: this.limit\n    })\n      .then(res => {\n        if (!res.data.length) {\n          this.showPlaceholder = true;\n          this.loading(false);\n          return;\n        }\n        this.handleResponse(res).forEach(card => this.wrapper.append(card));\n      })\n  }\n  \n  private initiateInfiniteScroll() {\n    if (!this.hasInfiniteScroll) {\n      return;\n    }\n\n    this.host.insertAdjacentElement('beforeend', this.status);\n    this.infiniteScroll = salla.infiniteScroll.initiate(this.wrapper, this.wrapper, {\n      path: () => this.nextPage,\n      history: false,\n      nextPage: this.nextPage,\n      scrollThreshold: 100,\n    }, /* infinite via api*/true);\n    this.infiniteScroll.on('request', () => this.loading())\n    this.infiniteScroll.on('load', response => {\n      if (!response.data?.length) {\n        this.showPlaceholder = true;\n        salla.infiniteScroll.destroy(this.infiniteScroll);\n        this.loading(false);\n        return;\n      }else{\n        this.showPlaceholder = false;\n\n      }\n      this.infiniteScroll.appendItems(this.handleResponse(response))\n      if (this.infiniteScroll.pageIndex == 2) {\n        this.animateItems();\n      }\n    })\n    this.infiniteScroll.on('error', () => {\n      this.status.querySelector('.s-infinite-scroll-error').classList.remove('s-hidden')\n      this.loading(false);\n    });\n    salla.onReady(() => salla.infiniteScroll.loadNextPage(this.infiniteScroll))\n  }\n\n  private canRender() {\n    return this.sourceValueIsValid && this.isReady;\n  }\n\n  render() {\n    if (!this.canRender()) {\n      return '';\n    }\n    if (this.showPlaceholder) {\n      return <div class=\"s-products-list-placeholder\">\n        <span innerHTML={ShoppingBag}/>\n        <p>{this.placeholderText}</p>\n      </div>;\n    }\n    return (\n      <Host class=\"s-products-list\">\n        <div class={{\n          \"s-products-list-wrapper\": true,\n          's-products-list-horizontal-cards': this.horizontalCards && !this.filtersResults,\n          's-products-list-vertical-cards': !this.horizontalCards && !this.filtersResults,\n          's-products-list-filters-results': this.filtersResults,\n        }}\n             ref={wrapper => this.wrapper = wrapper}/>\n      </Host>\n    );\n  }\n\n  componentDidLoad() {\n    if (!this.canRender()) {\n      return;\n    }\n\n    // Handle json source\n    if (this.getSource() === 'json') {\n      if (!this.getSourceValue().length) {\n        this.showPlaceholder = true;\n        return;\n      }\n      this.getSourceValue().map(product => this.wrapper.append(this.getItemHTML(product)));\n      return;\n    }\n    // Handle selected source\n    if (this.getSource() === 'selected') {\n      if (!this.getSourceValue().length) {\n        this.showPlaceholder = true;\n        return;\n      }\n      this.fetchProducts()\n      return;\n    }\n    this.init();\n  }\n\n  private init() {\n    this.initiateInfiniteScroll();\n    this.loading();\n  }\n\n  private handleResponse(response): Array<HTMLElement> {\n    //💡 when source is related, cursor will not be existed\n    if (response.filters && this.isFilterable()) {\n      this.filtersResults = true;\n      salla.event.emit('filters::fetched', {filters: response.filters});\n    } else if (this.isFilterable()) {\n      salla.event.emit('filters::hidden');\n    }\n    this.nextPage = response.cursor ? response.cursor.next : this.nextPage;\n    this.loading(false);\n    if (this.hasInfiniteScroll && !this.nextPage) {\n      this.infiniteScroll.option({scrollThreshold: false, loadOnScroll: false});\n      this.status.querySelector('.s-infinite-scroll-last').classList.remove('s-hidden');\n    }\n    return response.data?.map(product => this.getItemHTML(product)) || [];\n  }\n}\n"],"mappings":";;;mzBAAA,MAAMA,EAAuB,G,MCQhBC,EAAiB,M,4LA2FJ,E,+OA1FxBC,oBACEC,MAAMC,SAAQ,KACZC,KAAKC,qBAAuBC,eAAeC,IAAI,6BAC/CH,KAAKI,sBAAwBJ,KAAKK,kBAAoBL,KAAKM,wBAC3DN,KAAKO,mBAAqB,CAAC,OAAQ,WAAY,UAAW,gBAAgBC,SAASR,KAAKS,aACxF,IACE,IAAIC,EAAe,IAAIC,gBAAgBC,OAAOC,SAASC,QACvDd,KAAKe,OAASf,KAAKe,QAAUL,EAAaP,IAAI,SAAWO,EAAaP,IAAI,MAC1E,IAAIa,EAAUN,EAAaP,IAAI,WAC/BH,KAAKiB,cAAgBD,EAAUE,KAAKC,MAAMC,mBAAmBJ,IAAY,E,CACzE,MAAOK,GACPvB,MAAMwB,OAAOC,KAAK,iCAAkCF,EAAEG,Q,CAExDxB,KAAKyB,mBACLzB,KAAK0B,kBAEL1B,KAAK2B,QAAU,IAAI,IAGrB,IAAK3B,KAAKI,mBAAoB,CAC5BN,MAAMwB,OAAOC,KAAK,6CAA6CvB,KAAKS,gBACpE,M,CAEFX,MAAM8B,MAAMC,GAAG,0BAA0Bb,GAAWhB,KAAK8B,WAAWd,I,CAMtEe,iBAAiBf,GACfhB,KAAKiB,cAAgBD,EACrB,OAAOhB,KAAKgC,Q,CAKdD,eACEjC,MAAMmC,eAAeC,QAAQlC,KAAKiC,gBAClCjC,KAAKyB,mBACLzB,KAAKmC,QAAQC,UAAY,GACzBpC,KAAKqC,M,CA4DCC,eACN,OAAOxC,MAAMyC,OAAOpC,IAAI,mCAAqCH,KAAKwC,c,CAG5DlC,uBACN,MAAO,CAAC,SAAU,SAAU,SAASE,SAASR,KAAKS,Y,CAG7CgC,eACNC,EAAM,CACJC,QAAS,yCACTC,QAAS,CAAC,EAAG,GACbC,SAAU,KACVC,WAAY,CAAC,GAAI,GACjBC,MAAO,SAAUC,EAAKC,GACpB,OAAOA,EAAI,G,IAKTvB,kBACN1B,KAAKkD,OAASC,SAASC,cAAc,OACrCpD,KAAKkD,OAAOG,UAAY,4BACxBrD,KAAKkD,OAAOd,UAAY,oHAC+CtC,MAAMwD,KAAKnD,IAAI,oHACdL,MAAMwD,KAAKnD,IAAI,+PAKvFH,KAAKuD,UAAYvD,KAAKkD,OAAOM,cAAc,oBAC3C1D,MAAMwD,KAAKG,UAAS,KAClBzD,KAAKkD,OAAOM,cAAc,2BAA2BpB,UAAYtC,MAAMwD,KAAKnD,IAAI,kCAChFH,KAAKkD,OAAOM,cAAc,4BAA4BpB,UAAYtC,MAAMwD,KAAKnD,IAAI,uCACjFH,KAAK0D,gBAAkB5D,MAAMwD,KAAKnD,IAAI,+BAA+B,G,CAIjEwD,oBAAoBC,GAE1B5D,KAAK6D,SAAW/D,MAAMgE,IAAIC,IAAI,mBAAmBH,KAEjD,GAAI5D,KAAKgE,MAAO,CACdhE,KAAK6D,UAAY,aAAa7D,KAAKgE,MAAQ,GAAK,GAAKhE,KAAKgE,O,CAE5D,GAAIhE,KAAKe,OAAQ,CACff,KAAK6D,UAAY,SAAS7D,KAAKe,Q,CAKjCf,KAAK6D,UAAY,gBACjB,IAAK,MAAOI,EAAKC,KAAUC,OAAOC,QAAQpE,KAAKiB,eAAiB,IAAK,CACnE,GAAI,CAAC,SAAU,UAAUT,gBAAgB0D,GAAQ,CAC/ClE,KAAK6D,UAAY,YAAYI,MAAQC,G,MAChC,GAAIG,MAAMC,QAAQJ,GAAQ,CAC9BA,EAAcK,SAAQC,GAAQxE,KAAK6D,UAAY,YAAYI,QAAUO,K,MACjE,UAAWN,IAAU,SAAU,CACpC,IAAK,MAAOO,EAAGC,KAAMP,OAAOC,QAAQF,GAAQ,CAC1ClE,KAAK6D,UAAY,YAAYI,MAAQQ,MAAMC,G,IAM3CjD,mBACN,IAAImC,EAAS5D,KAAKS,YAClB,GAAImD,IAAW,OAAQ,CACrB,M,CAEF5D,KAAK2D,oBAAoBC,GACzB,GAAI5D,KAAKM,uBAAwB,CAC/B,M,CAGF,GAAI,CAAC,SAAU,UAAW,gBAAgBE,SAASoD,GAAS,CAC1D5D,KAAK6D,UAAY,iBAAiB7D,KAAKK,mBACvC,M,CAGF,IACEL,KAAK6D,UAAY,mBAAmB7D,KAAKK,iBAAiBsE,KAAK,qB,CAC/D,MAAOtD,GACPvB,MAAMwB,OAAOC,KAAK,sFAAsFqC,MACxG5D,KAAKI,mBAAqB,K,EAItBK,YACN,MAAO,CACL,gBAAiB,SACjB,gBAAiB,aACjB,uBAAwB,SACxB,uBAAwB,SACxB,uBAAwB,SACxB,eAAgB,eAChB,oBAAqB,OACrB,sBAAuB,QACvB,iCAAkC,SAClCT,KAAK4D,QAAU9D,MAAMyC,OAAOpC,IAAI,eAAiBH,KAAK4D,QAAU,Q,CAG5DvD,iBACN,IAAIuD,EAAS5D,KAAKS,YAGlB,IAAK,CAAC,SAAU,OAAQ,SAAU,SAAU,SAASD,SAASoD,GAAS,CACrE,GAAI5D,KAAK4E,aAAeP,MAAMC,QAAQpD,KAAKC,MAAMnB,KAAK4E,eAAiB1D,KAAKC,MAAMnB,KAAK4E,aAAaC,OAAQ,CAC1G,OAAO3D,KAAKC,MAAMnB,KAAK4E,Y,CAGzB,GAAI5E,KAAK4E,oBAAsB1D,KAAKC,MAAMnB,KAAK4E,cAAgB,SAAU,CACvE,MAAO,CAAC1D,KAAKC,MAAMnB,KAAK4E,a,CAE1B,IAAK5E,KAAK4E,aAAe,CAAC,aAAc,OAAQ,SAAU,gBAAgBpE,SAASR,KAAKS,aAAc,CACpG,MAAO,CAACX,MAAMyC,OAAOpC,IAAI,W,EAI7B,GAAIH,KAAK4E,YAAa,CACpB,OAAO5E,KAAK4E,W,CAId,GAAIhB,IAAW,SAAU,CACvB,OAAO,IAAKjD,gBAAgBC,OAAOC,SAASC,QAASX,IAAI,I,CAG3D,OAAOL,MAAMyC,OAAOpC,IAAI,U,CAIlB2E,QAAQC,EAAY,MAC1B/E,KAAKuD,UAAUyB,MAAMC,QAAUF,EAAY,UAAY,M,CAGjDG,YAAYC,GAClB,IAAIC,EAA6BpF,KAAKC,mBAAqB,4BAA8B,qBACzF,IAAIoF,EAA+ClC,SAASC,cAAcgC,GAC1EC,EAAgBF,QAAUA,EAE1B,GAAInF,KAAKS,aAAe,iBAAmBT,KAAKC,mBAAoB,CAClEoF,EAAgBC,gBAAgB,eAAgB,MAChDD,EAAgBE,UAAUC,IAAI,4B,CAEhC,GAAIxF,KAAKyF,kBAAoBzF,KAAKC,mBAAoB,CACpDoF,EAAgBC,gBAAgB,aAAc,MAC9CD,EAAgBC,gBAAgB,kBAAmB,K,CAErD,OAAOD,C,CAGDK,gBACN5F,MAAMqF,QAAQQ,MAAM,CAClB/B,OAAQ5D,KAAKS,YACbmF,aAAc5F,KAAKK,iBACnB2D,MAAOhE,KAAKgE,QAEX6B,MAAKC,IACJ,IAAKA,EAAIC,KAAKlB,OAAQ,CACpB7E,KAAKgG,gBAAkB,KACvBhG,KAAK8E,QAAQ,OACb,M,CAEF9E,KAAKiG,eAAeH,GAAKvB,SAAQ2B,GAAQlG,KAAKmC,QAAQgE,OAAOD,IAAM,G,CAIjEE,yBACN,IAAKpG,KAAKO,kBAAmB,CAC3B,M,CAGFP,KAAKqG,KAAKC,sBAAsB,YAAatG,KAAKkD,QAClDlD,KAAKiC,eAAiBnC,MAAMmC,eAAesE,SAASvG,KAAKmC,QAASnC,KAAKmC,QAAS,CAC9EqE,KAAM,IAAMxG,KAAK6D,SACjB4C,QAAS,MACT5C,SAAU7D,KAAK6D,SACf6C,gBAAiB,KACK,MACxB1G,KAAKiC,eAAeJ,GAAG,WAAW,IAAM7B,KAAK8E,YAC7C9E,KAAKiC,eAAeJ,GAAG,QAAQ8E,I,MAC7B,MAAKC,EAAAD,EAASZ,QAAI,MAAAa,SAAA,SAAAA,EAAE/B,QAAQ,CAC1B7E,KAAKgG,gBAAkB,KACvBlG,MAAMmC,eAAeC,QAAQlC,KAAKiC,gBAClCjC,KAAK8E,QAAQ,OACb,M,KACG,CACH9E,KAAKgG,gBAAkB,K,CAGzBhG,KAAKiC,eAAe4E,YAAY7G,KAAKiG,eAAeU,IACpD,GAAI3G,KAAKiC,eAAe6E,WAAa,EAAG,CACtC9G,KAAKyC,c,KAGTzC,KAAKiC,eAAeJ,GAAG,SAAS,KAC9B7B,KAAKkD,OAAOM,cAAc,4BAA4B+B,UAAUwB,OAAO,YACvE/G,KAAK8E,QAAQ,MAAM,IAErBhF,MAAMC,SAAQ,IAAMD,MAAMmC,eAAe+E,aAAahH,KAAKiC,iB,CAGrDgF,YACN,OAAOjH,KAAKI,oBAAsBJ,KAAK2B,O,CAGzCuF,SACE,IAAKlH,KAAKiH,YAAa,CACrB,MAAO,E,CAET,GAAIjH,KAAKgG,gBAAiB,CACxB,OAAOmB,EAAA,OAAKC,MAAM,+BAChBD,EAAA,QAAM/E,UAAWiF,IACjBF,EAAA,SAAInH,KAAK0D,iB,CAGb,OACEyD,EAACG,EAAI,CAACF,MAAM,mBACVD,EAAA,OAAKC,MAAO,CACV,0BAA2B,KAC3B,mCAAoCpH,KAAKyF,kBAAoBzF,KAAKwC,eAClE,kCAAmCxC,KAAKyF,kBAAoBzF,KAAKwC,eACjE,kCAAmCxC,KAAKwC,gBAErC+E,IAAKpF,GAAWnC,KAAKmC,QAAUA,I,CAK1CqF,mBACE,IAAKxH,KAAKiH,YAAa,CACrB,M,CAIF,GAAIjH,KAAKS,cAAgB,OAAQ,CAC/B,IAAKT,KAAKK,iBAAiBwE,OAAQ,CACjC7E,KAAKgG,gBAAkB,KACvB,M,CAEFhG,KAAKK,iBAAiBoH,KAAItC,GAAWnF,KAAKmC,QAAQgE,OAAOnG,KAAKkF,YAAYC,MAC1E,M,CAGF,GAAInF,KAAKS,cAAgB,WAAY,CACnC,IAAKT,KAAKK,iBAAiBwE,OAAQ,CACjC7E,KAAKgG,gBAAkB,KACvB,M,CAEFhG,KAAK0F,gBACL,M,CAEF1F,KAAKqC,M,CAGCA,OACNrC,KAAKoG,yBACLpG,KAAK8E,S,CAGCmB,eAAeU,G,MAErB,GAAIA,EAAS3F,SAAWhB,KAAKsC,eAAgB,CAC3CtC,KAAKwC,eAAiB,KACtB1C,MAAM8B,MAAM8F,KAAK,mBAAoB,CAAC1G,QAAS2F,EAAS3F,S,MACnD,GAAIhB,KAAKsC,eAAgB,CAC9BxC,MAAM8B,MAAM8F,KAAK,kB,CAEnB1H,KAAK6D,SAAW8C,EAASgB,OAAShB,EAASgB,OAAOC,KAAO5H,KAAK6D,SAC9D7D,KAAK8E,QAAQ,OACb,GAAI9E,KAAKO,oBAAsBP,KAAK6D,SAAU,CAC5C7D,KAAKiC,eAAe4F,OAAO,CAACnB,gBAAiB,MAAOoB,aAAc,QAClE9H,KAAKkD,OAAOM,cAAc,2BAA2B+B,UAAUwB,OAAO,W,CAExE,QAAOH,EAAAD,EAASZ,QAAI,MAAAa,SAAA,SAAAA,EAAEa,KAAItC,GAAWnF,KAAKkF,YAAYC,OAAa,E"}