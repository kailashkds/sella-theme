{"version":3,"names":["sallaPriceRangeCss","SallaPriceRange","this","filterValues","class_1","prototype","connectedCallback","filtersData","_a","price","minPrice","min","maxPrice","max","option","values","length","chunkSize","Math","ceil","i","push","slice","reduce","final","currentValue","to","count","reset","minInput","value","maxInput","getPriceLabel","filterValue","isNaN","from","concat","salla","money","handleMinMaxPrice","event","changedEventHandler","isMin","helpers","inputDigitsOnly","target","minInputValidation","maxInputValidation","isReady","changed","emit","isChecked","isMinEqual","isMaxEqual","render","_this","h","Host","map","index","class","htmlFor","key","id","name","type","checked","onChange","e","config","currency","symbol","maxlength","ref","el","onInput","placeholder","componentDidLoad"],"sources":["src/components/salla-price-range/salla-price-range.scss?tag=salla-price-range","src/components/salla-price-range/salla-price-range.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n\n.rtl, [dir=\"rtl\"] {\n  .rtl-range-slider {\n      transform: rotateY(180deg);\n  }\n\n  .rtl-range-numbers{\n      flex-direction: row-reverse;\n  }\n\n  .form-select, select{\n      background-position: left 0.5rem center;\n      padding-right: 12px;\n  }   \n\n  // divide\n.menu-divide {\n  li {\n      &:not(:last-child) {\n          &:after {\n              left: 0;\n              right: auto;\n          }\n      }\n  }\n}\n}\n\ninput[type=range]::-webkit-slider-thumb {\n  pointer-events: all;\n  width: 24px;\n  height: 24px;\n  -webkit-appearance: none;\n}\n\n[type='checkbox']:checked{\n  background-size: 80%;\n}","import {Component, Host, h, State, Prop, Event, Method} from '@stencil/core';\nimport {Filter, FilterValue} from \"../salla-filters/interfaces\";\n\n@Component({\n  tag: 'salla-price-range',\n  styleUrl: 'salla-price-range.scss',\n})\nexport class SallaPriceRange {\n  @Prop({mutable: true}) minPrice;\n  @Prop({mutable: true}) maxPrice;\n  @Prop({reflect: true}) option: Filter;\n  @Prop({reflect: true}) filtersData: any;\n  @State() min = 0;\n  @State() max = 10000;\n\n  @State() priceOptions: any;\n\n  @Event() changed: any;\n\n  isReady: Boolean;\n  minInput: HTMLInputElement;\n  maxInput: HTMLInputElement;\n  filterValues: Array<FilterValue> = [];\n\n\n  connectedCallback() {\n    if (this.filtersData && this.filtersData?.price) {\n      this.minPrice = this.filtersData.price.min;\n      this.maxPrice = this.filtersData.price.max;\n    }\n\n    //no need to show one option only\n    if (this.option.values.length == 1) {\n      return;\n    }\n    //here we may recive too many prices, we will group all inputs to\n    if (this.option.values.length <= 5) {\n      this.filterValues = this.option.values;\n      return;\n    }\n    const chunkSize = Math.ceil(this.option.values.length / 5);\n    for (let i = 0; i < this.option.values.length; i += chunkSize) {\n      this.filterValues.push(\n        this.option.values\n          .slice(i, i + chunkSize)\n          .reduce((final: FilterValue, currentValue: FilterValue) => {\n            final.to = currentValue.to;\n            final.count += currentValue.count;\n            return final;\n          })\n      );\n      // do whatever\n    }\n  }\n\n  @Method()\n  async reset() {\n    //@ts-ignore\n    this.minInput.value = null;\n    this.maxInput.value = null;\n  }\n\n  private getPriceLabel(filterValue: FilterValue) {\n    // @ts-ignore\n    if (isNaN(filterValue.from) || filterValue.from < 1) {\n      return `اقل من ${salla.money(filterValue.to)}`;\n    }\n    // @ts-ignore\n    if (isNaN(filterValue.to) || filterValue.to < 1) {\n      return `أكثر من ${salla.money(filterValue.from)}`;\n    }\n\n    return `${salla.money(filterValue.from)} الى ${salla.money(filterValue.to)}`;\n  }\n\n\n  private handleMinMaxPrice(event: Event, value: FilterValue): void {\n\n    this.minPrice = value.from;\n    this.maxPrice = value.to != '*' ? value.to : null;\n\n    this.changedEventHandler(event);\n  }\n\n  private async changedEventHandler(event, isMin = false) {\n    salla.helpers.inputDigitsOnly(event.target)\n    let value = event ? event.target.value * 1 : null\n    if (isMin) {\n      this.minInputValidation(value);\n    } else {\n      this.maxInputValidation(value)\n    }\n\n\n    this.isReady && this.changed.emit({\n      event: event,\n      option: this.option,\n      value: {max: this.maxPrice, min: this.minPrice}\n    })\n  }\n\n\n  minInputValidation(value) {\n    if (value && (value > this.max || value > this.maxPrice)) {\n      // this.minPrice = this.maxPrice;\n      return;\n    }\n\n    if (value < this.min) {\n      this.minPrice = this.min;\n      return;\n    }\n\n    if (value) {\n      this.minPrice = value;\n    }\n  }\n\n  maxInputValidation(value) {\n    if (value && (value < this.min || value < this.minPrice)) {\n      // this.maxPrice = this.minPrice;\n      return;\n    }\n    if (value > this.max) {\n      this.maxPrice = this.max;\n      return;\n    }\n\n    if (value) {\n      this.maxPrice = value;\n    }\n  }\n\n  private isChecked(filterValue: FilterValue) {\n    if (!this.minPrice && !this.maxPrice) {\n      return false;\n    }\n\n    //1 filterValue.from zero or * and this.minPrice not set or zero\n    //2 filterValue.from == this.minPrice\n    let isMinEqual = ((filterValue.from < 1 || filterValue.from == '*') && this.minPrice == 0) || filterValue.from == this.minPrice;\n\n    //1 filterValue.to == \"*\" or null\n    //2 filterValue.to == this.max\n    let isMaxEqual = filterValue.to == '*' || !filterValue.to || filterValue.to == this.maxPrice;\n    return isMinEqual && isMaxEqual;\n  }\n\n\n  render() {\n    return (\n      <Host>\n        {\n          this.filterValues.map((filterValue, index) => {\n            return <label class=\"s-filters-label\" htmlFor={`${this.option.key}-${index}`}>\n              <input\n                id={`${this.option.key}-${index}`}\n                name=\"price\"\n                type=\"radio\"\n                checked={this.isChecked(filterValue)}\n                class=\"s-filters-radio\"\n                onChange={e => this.handleMinMaxPrice(e, filterValue)}\n              />\n              {this.getPriceLabel(filterValue)}\n            </label>\n          })\n        }\n\n\n        <div class=\"flex justify-center items-center\">\n          <div class=\"relative max-w-xl w-full\">\n            <div class=\"s-price-range-inputs\">\n              <div class=\"s-price-range-relative\">\n                <div class=\"s-price-range-currency\"> {salla.config.currency().symbol}</div>\n                <input\n                  type=\"number\"\n                  maxlength=\"5\"\n                  ref={el => this.minInput = el}\n                  onInput={(event) => this.changedEventHandler(event, true)}\n                  value={this.minPrice}\n                  placeholder=\"من\"\n                  class=\"s-price-range-number-input\"\n                />\n              </div>\n\n              <div class=\"s-price-range-gray-text\"> -</div>\n              <div class=\"s-price-range-relative\">\n                <div class=\"s-price-range-currency\"> {salla.config.currency().symbol}</div>\n                <input type=\"number\" maxlength=\"5\"\n                       placeholder=\"الى\"\n                       ref={el => this.maxInput = el}\n                       onInput={(event) => this.changedEventHandler(event)}\n                       value={this.maxPrice}\n                       class=\"s-price-range-number-input\" aria-describedby=\"price-currency\"/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  componentDidLoad() {\n    this.isReady = true;\n  }\n}\n"],"mappings":"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"}