{"file":"salla-comment-form.entry.js","mappings":";;;;;AAAA,MAAM,mBAAmB,GAAG,sBAAsB;;MCMrC,gBAAgB;EAE3B;;;;;uBA2B+B,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,6BAA6B,CAAC;sBAC9C,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC;;IA3BpE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;MAClB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAA;MAChE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAA;KAC3D,CAAC,CAAC;IACH,KAAK,CAAC,OAAO,CAAC;MACZ,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;MACvD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;MAC1C,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,MAAM,GAAG,SAAS,CAAC;KACnE,CAAC,CAAC;GACJ;EA0BO,MAAM;IACZ,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,EAAE;MACtC,KAAK,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;MAC7C,OAAO;KACR;IACD,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;OAClB,IAAI,CAAC,MAAM,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC;OACnG,OAAO,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;GACvC;EAED,MAAM;IACJ,QACE,EAAC,IAAI,QACF,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,YAAM,GAAG,EAAE,GAAG,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,IAC3D,WAAK,KAAK,EAAC,wBAAwB,IAChC,IAAI,CAAC,UAAU;MACd,WAAK,KAAK,EAAC,uBAAuB,EAAC,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,GAAG,EAAC,aAAa,GAAE,GAAG,EAAE,EACnG,WAAK,KAAK,EAAC,wBAAwB,IACjC,gBAAU,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,SAAS,EAAC,GAAG,EAAC,SAAS,EAAC,KAAK,EAChD,GAAG,EAAE,KAAK,IAAI,IAAI,CAAC,YAAY,GAAG,KAAK,EACvC,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,KAAK,EAAC,sBAAsB,EAC5B,QAAQ,SAAE,EACpB,aAAK,EACL,WAAK,KAAK,EAAC,uBAAuB,IAChC,oBAAc,GAAG,EAAE,GAAG,IAAI,IAAI,CAAC,SAAS,GAAG,GAAG,qBAAkB,QAAQ,EAAC,OAAO,EAAE,MAAM,IAAI,CAAC,MAAM,EAAE,IAClG,IAAI,CAAC,UAAU,CACH,CACX,CACF,CACF,CACD,GAAG,EAAE,CACP,EACP;GACH;;;;;;","names":[],"sources":["./src/components/salla-comment-form/salla-comment-form.scss?tag=salla-comment-form","./src/components/salla-comment-form/salla-comment-form.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import {Component, Host, State, h, Prop} from '@stencil/core';\n\n@Component({\n  tag: 'salla-comment-form',\n  styleUrl: 'salla-comment-form.scss',\n})\nexport class SallaCommentForm {\n\n  constructor() {\n    salla.lang.onLoaded(() => {\n      this.placeholder = salla.lang.get('blocks.comments.placeholder')\n      this.submitText = salla.lang.get('blocks.comments.submit')\n    });\n    salla.onReady(() => {\n      this.canComment = salla.config.get('user.can_comment');\n      this.itemId = salla.config.get('page.id');\n      this.type = salla.url.is_page('page-single') ? 'page' : 'product';\n    });\n  }\n\n  /**\n   * Type of entity the comment is being submitted for. Defaults to `salla.url.is_page('page-single') ? 'page' : 'product'`\n   */\n  @Prop({mutable: true, reflect: true}) type: 'product' | 'page';\n\n  /**\n   * To show the avatar or not in the comment form\n   */\n  @Prop() showAvatar: boolean;\n\n  /**\n   * The ID of the item(as defined in the type), where the comment is for. defaults to `salla.config.get('page.id')`\n   */\n  @Prop({mutable: true, reflect: true}) itemId?: string | number;\n\n  @State() placeholder: string = salla.lang.get('blocks.comments.placeholder');\n  @State() submitText: string = salla.lang.get('blocks.comments.submit');\n  @State() canComment: boolean;\n\n  private commentField: HTMLTextAreaElement;\n  private submitBtn: HTMLSallaButtonElement;\n  private commentForm: HTMLFormElement;\n\n\n  private submit() {\n    if (!this.commentForm.reportValidity()) {\n      salla.log('CommentForm:: validation error!');\n      return;\n    }\n    this.submitBtn.load()\n      .then(() => salla.comment.add({id: this.itemId, comment: this.commentField.value, type: this.type}))\n      .finally(() => this.submitBtn.stop);\n  }\n\n  render() {\n    return (\n      <Host>\n        {!!this.canComment ? <form ref={frm => this.commentForm = frm}>\n          <div class=\"s-comment-form-wrapper\">\n            {this.showAvatar ?\n              <img class=\"s-comment-form-avatar\" src={salla.config.get('user.avatar')} alt=\"user avatar\"/> : ''}\n            <div class=\"s-comment-form-content\">\n              <textarea cols={30} rows={5} minlength=\"4\" maxlength=\"500\"\n                        ref={field => this.commentField = field}\n                        placeholder={this.placeholder}\n                        class=\"s-comment-form-input\"\n                        required/>\n              <br/>\n              <div class=\"s-comment-form-action\">\n                <salla-button ref={btn => this.submitBtn = btn} loader-position='center' onClick={() => this.submit()}>\n                  {this.submitText}\n                </salla-button>\n              </div>\n            </div>\n          </div>\n        </form> : ''}\n      </Host>\n    );\n  }\n}\n"],"version":3}