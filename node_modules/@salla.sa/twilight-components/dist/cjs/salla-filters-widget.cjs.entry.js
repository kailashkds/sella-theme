/*!
 * Crafted with ❤ by Salla
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-e85bd084.js');
const Helper = require('./Helper-63d6ab45.js');
const interfaces = require('./interfaces-56bf4b49.js');

const sallaFiltersWidgetCss = ":host{display:block}";

const SallaFiltersWidget = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.changed = index.createEvent(this, "changed", 7);
    this.initHeight = 195;
    this.widgetTitle = undefined;
    this.withLoadMore = undefined;
    this.filtersData = undefined;
    this.option = undefined;
    this.isOpen = true;
    this.isShowMore = false;
  }
  connectedCallback() {
    //lets be smart and don't show 5 and more link for 8 options
    this.withLoadMore = this.option.key != 'price' && Array.isArray(this.option.values) && this.option.values.length > 8;
    this.widgetTitle = this.option.label;
  }
  componentDidLoad() {
    this.widgetValues.scrollHeight < this.initHeight && (this.withLoadMore = false);
    (this.withLoadMore && this.widgetValues) && (this.widgetValues.style.maxHeight = `${this.initHeight}px`);
    this.widgetContent.style.height = `${this.widgetContent.scrollHeight}px`;
  }
  async reset() {
    if (this.option.type === interfaces.FilterOptionTypes.RANGE) {
      this.priceRange.reset();
    }
    Array.from(this.host.querySelectorAll('input')).forEach(input => input.checked = false);
  }
  async showMore() {
    this.isShowMore = !this.isShowMore;
    this.widgetContent.style.height = 'auto';
    this.widgetValues.style.maxHeight = this.isShowMore ? `${this.widgetValues.scrollHeight}px` : `${this.initHeight}px`;
    setTimeout(() => {
      this.widgetContent.style.height = `${this.widgetContent.scrollHeight}px`;
    }, 400); // get height after time of collapse animtion (duration-300)
  }
  async toggleWidget() {
    this.isOpen = !this.isOpen;
    Helper.Helper.toggleElementClassIf(this.widgetContent, 's-filters-widget-opened', 's-filters-widget-closed', () => this.isOpen);
  }
  renderFilterOption(option) {
    if (![interfaces.FilterOptionTypes.VALUES, interfaces.FilterOptionTypes.MINIMUM, interfaces.FilterOptionTypes.VARIANTS].includes(option.type)) {
      return '';
    }
    //@ts-ignore
    return option.values.map((filterOption, index$1) => {
      let value = typeof filterOption == 'number' ? filterOption : (filterOption.key || filterOption.value);
      return index.h("label", { class: "s-filters-label", htmlFor: `${option.key}-option-${index$1}` }, index.h("input", { id: `${option.key}-option-${index$1}`, name: option.key, type: option.inputType,
        //TODO:: debug more why sometimes it's not rendered as selected🤨
        checked: this.isSelectedOption(option, value), class: `s-filters-${option.inputType}`, onChange: e => this.changed.emit({ event: e, option: option, value: value }) }), this.getOptionLabel(option, filterOption));
    });
  }
  isSelectedOption(option, value) {
    if (!this.filtersData || !this.filtersData[option.key]) {
      return false;
    }
    return option.inputType === interfaces.FilterOptionInputType.CHECKBOX
      ? this.filtersData[option.key].includes(value)
      : this.filtersData[option.key] == value;
  }
  getOptionLabel(option, filterOption) {
    if (option.key == 'rating') {
      //in amazon has stars & up, should we add it, to avoid those people who will come to say I selected 4 why I see 5 sars products
      return index.h("salla-rating-stars", { size: "small", value: filterOption });
    }
    let label = filterOption.value || 'null';
    //label+=filterOption.count ? ` (${salla.helpers.number(filterOption.count)})` : '';
    return index.h("span", { class: "s-filters-option-name" }, label);
  }
  render() {
    return (index.h(index.Host, { class: "s-filters-widget-container" }, index.h("h3", { class: "s-filters-widget-title", onClick: () => this.toggleWidget() }, index.h("span", null, this.widgetTitle), index.h("span", { class: `s-filters-widget-plusminus ${this.isOpen ? 's-filters-widget-plusminus-active' : ''}` })), index.h("div", { class: "s-filters-widget-content", ref: (el) => this.widgetContent = el }, index.h("div", { class: "s-filters-widget-values", ref: (el) => this.widgetValues = el }, index.h("slot", null), this.option.type !== interfaces.FilterOptionTypes.RANGE
      ? this.renderFilterOption(this.option)
      : index.h("salla-price-range", { onChanged: (event) => this.changed.emit(event.detail), ref: price => this.priceRange = price, filtersData: this.filtersData, option: this.option })), this.withLoadMore &&
      index.h("a", { class: "s-filters-widget-more", onClick: () => this.showMore() }, !this.isShowMore ? 'عرض المزيد' : 'عرض أقل'))));
  }
  get host() { return index.getElement(this); }
};
SallaFiltersWidget.style = sallaFiltersWidgetCss;

exports.salla_filters_widget = SallaFiltersWidget;

//# sourceMappingURL=salla-filters-widget.cjs.entry.js.map