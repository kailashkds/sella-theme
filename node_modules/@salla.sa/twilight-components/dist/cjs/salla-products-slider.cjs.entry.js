/*!
 * Crafted with ❤ by Salla
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-e85bd084.js');

const sallaProductsSliderCss = "";

const SallaProductsSlider = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.blockTitle = undefined;
    this.subTitle = undefined;
    this.sliderId = undefined;
    this.displayAllUrl = undefined;
    this.source = undefined;
    this.sourceValue = undefined;
    this.limit = undefined;
    this.productsData = undefined;
    this.isReady = undefined;
    this.sourceValueIsValid = undefined;
    this.hasCustomComponent = undefined;
    this.apiUrl = '';
    this.parsedSourceValue = undefined;
    salla.onReady(() => {
      this.sourceValueIsValid = !!(this.sourceValue || ['latest', 'offers'].includes(this.getSource()));
    });
    if (!this.sourceValueIsValid) {
      salla.logger.warn(`source-value prop is required for source [${this.getSource()}]`);
      return;
    }
    this.hasCustomComponent = !!customElements.get('custom-salla-product-card');
  }
  getItemHTML(product) {
    if (this.hasCustomComponent) {
      return index.h("div", { class: "s-products-slider-card" }, index.h("custom-salla-product-card", { product: product, source: this.getSource(), "source-value": this.getSourceValue() }));
    }
    return index.h("div", { class: "s-products-slider-card" }, index.h("salla-product-card", { "show-quantity": this.getSource() == 'landing-page', "hide-add-btn": this.getSource() == 'landing-page', "shadow-on-hover": true, product: product }));
  }
  getUrlPrefix() {
    let urlPrefix = '';
    if (this.limit) {
      urlPrefix = `&per_page=${this.limit > 32 ? 32 : this.limit}`;
    }
    return urlPrefix;
  }
  getApiUrl() {
    if (this.getSource() === 'json') {
      return;
    }
    let prefixes = this.getUrlPrefix();
    if (['offers', 'latest'].includes(this.getSource())) {
      return salla.url.api(`products?source=${this.getSource()}${prefixes}`);
    }
    if (['related', 'landing-page'].includes(this.getSource())) {
      return salla.url.api(`products?source=${this.getSource()}&source_value=${this.getSourceValue()}${prefixes}`);
    }
    try {
      return salla.url.api(`products?source=${this.getSource()}&source_value[]=${this.getSourceValue().join('&source_value[]=')}${prefixes}`);
    }
    catch (e) {
      salla.logger.warn(`source-value prop should be array of ids ex source-value="[1,2,3]" for the source [${this.getSource()}]`);
      this.sourceValueIsValid = false;
    }
  }
  getSource() {
    return {
      'brands.single': 'brands',
      'product.index': 'categories',
      'product.index.latest': 'latest',
      'product.index.offers': 'offers',
      'product.index.search': 'search',
      'landing-page': 'landing-page',
      'product.index.tag': 'tags',
    }[this.source || salla.config.get('page.slug')] || this.source || 'latest';
  }
  getSourceValue() {
    if (!['search', 'json'].includes(this.getSource())) {
      if (Array.isArray(JSON.parse(this.sourceValue)) && JSON.parse(this.sourceValue).length) {
        return JSON.parse(this.sourceValue);
      }
      if (typeof JSON.parse(this.sourceValue) == 'number') {
        return [JSON.parse(this.sourceValue)];
      }
    }
    return this.sourceValue || salla.config.get('page.id');
  }
  canRender() {
    return this.sourceValueIsValid && this.isReady;
  }
  componentWillLoad() {
    if (this.source === 'json') {
      this.productsData = this.getSourceValue();
      this.isReady = true;
      return;
    }
    salla.api.request(this.getApiUrl(), null, 'get').then(res => {
      this.productsData = res.data;
      this.isReady = true;
    });
  }
  render() {
    var _a;
    if ((this.getSource() == 'related' && !salla.config.get('store.settings.product.related_products_enabled')) || !this.canRender()) {
      return;
    }
    return (index.h(index.Host, { class: "s-products-slider-wrapper" }, index.h("salla-slider", { class: "s-products-slider-slider", id: this.sliderId || `s-products-slider-${Math.random().toString(36).substr(2, 9)}`, type: "carousel", "block-title": this.blockTitle, "block-subTitle": this.subTitle, "display-all-url": this.displayAllUrl }, index.h("div", { slot: "items" }, (_a = this.productsData) === null || _a === void 0 ? void 0 : _a.map((product) => this.getItemHTML(product))))));
  }
  get host() { return index.getElement(this); }
};
SallaProductsSlider.style = sallaProductsSliderCss;

exports.salla_products_slider = SallaProductsSlider;

//# sourceMappingURL=salla-products-slider.cjs.entry.js.map